{
  "version": 4,
  "terraform_version": "1.1.7",
  "serial": 47,
  "lineage": "0ddf0645-aa36-bd8f-adf3-213d4fe800a5",
  "outputs": {
    "vault_addr": {
      "value": "https://35.189.193.146:8200",
      "type": "string"
    }
  },
  "resources": [
    {
      "module": "module.vault",
      "mode": "data",
      "type": "google_compute_lb_ip_ranges",
      "name": "ranges",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "http_ssl_tcp_internal": [
              "130.211.0.0/22",
              "35.191.0.0/16"
            ],
            "id": "compute-lb-ip-ranges",
            "network": [
              "209.85.152.0/22",
              "209.85.204.0/22",
              "35.191.0.0/16"
            ]
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_address",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": "35.189.193.146",
            "address_type": "EXTERNAL",
            "creation_timestamp": "2022-03-17T07:20:51.030-07:00",
            "description": "",
            "id": "projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/addresses/vault-lb",
            "name": "vault-lb",
            "network": "",
            "network_tier": "PREMIUM",
            "prefix_length": 0,
            "project": "cloudops-dev-eu-svc-1afa",
            "purpose": "",
            "region": "europe-west1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/addresses/vault-lb",
            "subnetwork": "",
            "timeouts": null,
            "users": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.vault.google_project_service.service"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_address",
      "name": "vault-nat",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "address": "34.79.33.188",
            "address_type": "EXTERNAL",
            "creation_timestamp": "2022-03-17T07:20:50.697-07:00",
            "description": "",
            "id": "projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/addresses/vault-nat-external-0",
            "name": "vault-nat-external-0",
            "network": "",
            "network_tier": "PREMIUM",
            "prefix_length": 0,
            "project": "cloudops-dev-eu-svc-1afa",
            "purpose": "",
            "region": "europe-west1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/addresses/vault-nat-external-0",
            "subnetwork": "",
            "timeouts": null,
            "users": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.vault.google_project_service.service"
          ]
        },
        {
          "index_key": 1,
          "schema_version": 0,
          "attributes": {
            "address": "34.140.203.191",
            "address_type": "EXTERNAL",
            "creation_timestamp": "2022-03-17T07:20:51.007-07:00",
            "description": "",
            "id": "projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/addresses/vault-nat-external-1",
            "name": "vault-nat-external-1",
            "network": "",
            "network_tier": "PREMIUM",
            "prefix_length": 0,
            "project": "cloudops-dev-eu-svc-1afa",
            "purpose": "",
            "region": "europe-west1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/addresses/vault-nat-external-1",
            "subnetwork": "",
            "timeouts": null,
            "users": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.vault.google_project_service.service"
          ]
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow-external",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "8200"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2022-03-17T07:21:13.286-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/cloudops-dev-eu-svc-1afa/global/firewalls/vault-allow-external",
            "log_config": [],
            "name": "vault-allow-external",
            "network": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/global/networks/vault-network",
            "priority": 1000,
            "project": "cloudops-dev-eu-svc-1afa",
            "self_link": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/global/firewalls/vault-allow-external",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": [
              "allow-vault"
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_project_service.service"
          ]
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow-internal",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "8200-8201"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2022-03-17T07:21:13.042-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/cloudops-dev-eu-svc-1afa/global/firewalls/vault-allow-internal",
            "log_config": [],
            "name": "vault-allow-internal",
            "network": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/global/networks/vault-network",
            "priority": 1000,
            "project": "cloudops-dev-eu-svc-1afa",
            "self_link": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/global/firewalls/vault-allow-internal",
            "source_ranges": [
              "10.127.0.0/20"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": null,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_project_service.service"
          ]
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow-lb-healthcheck",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "58200"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2022-03-17T07:21:12.678-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/cloudops-dev-eu-svc-1afa/global/firewalls/vault-allow-lb-healthcheck",
            "log_config": [],
            "name": "vault-allow-lb-healthcheck",
            "network": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/global/networks/vault-network",
            "priority": 1000,
            "project": "cloudops-dev-eu-svc-1afa",
            "self_link": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/global/firewalls/vault-allow-lb-healthcheck",
            "source_ranges": [
              "130.211.0.0/22",
              "209.85.152.0/22",
              "209.85.204.0/22",
              "35.191.0.0/16"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": [
              "allow-vault"
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vault.data.google_compute_lb_ip_ranges.ranges",
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_project_service.service"
          ]
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_firewall",
      "name": "allow-ssh",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 1,
          "attributes": {
            "allow": [
              {
                "ports": [
                  "22"
                ],
                "protocol": "tcp"
              }
            ],
            "creation_timestamp": "2022-03-17T07:21:13.098-07:00",
            "deny": [],
            "description": "",
            "destination_ranges": [],
            "direction": "INGRESS",
            "disabled": false,
            "enable_logging": null,
            "id": "projects/cloudops-dev-eu-svc-1afa/global/firewalls/vault-allow-ssh",
            "log_config": [],
            "name": "vault-allow-ssh",
            "network": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/global/networks/vault-network",
            "priority": 1000,
            "project": "cloudops-dev-eu-svc-1afa",
            "self_link": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/global/firewalls/vault-allow-ssh",
            "source_ranges": [
              "0.0.0.0/0"
            ],
            "source_service_accounts": null,
            "source_tags": null,
            "target_service_accounts": null,
            "target_tags": [
              "allow-ssh"
            ],
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_project_service.service"
          ]
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_network",
      "name": "vault-network",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "auto_create_subnetworks": false,
            "delete_default_routes_on_create": false,
            "description": "",
            "gateway_ipv4": "",
            "id": "projects/cloudops-dev-eu-svc-1afa/global/networks/vault-network",
            "mtu": 0,
            "name": "vault-network",
            "project": "cloudops-dev-eu-svc-1afa",
            "routing_mode": "REGIONAL",
            "self_link": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/global/networks/vault-network",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_project_service.service"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_router",
      "name": "vault-router",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "bgp": [
              {
                "advertise_mode": "DEFAULT",
                "advertised_groups": null,
                "advertised_ip_ranges": [],
                "asn": 64514,
                "keepalive_interval": 20
              }
            ],
            "creation_timestamp": "2022-03-17T07:21:12.815-07:00",
            "description": "",
            "encrypted_interconnect_router": false,
            "id": "projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/routers/vault-router",
            "name": "vault-router",
            "network": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/global/networks/vault-network",
            "project": "cloudops-dev-eu-svc-1afa",
            "region": "europe-west1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/routers/vault-router",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_project_service.service"
          ]
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_router_nat",
      "name": "vault-nat",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "drain_nat_ips": null,
            "enable_endpoint_independent_mapping": true,
            "icmp_idle_timeout_sec": 30,
            "id": "cloudops-dev-eu-svc-1afa/europe-west1/vault-router/vault-nat-1",
            "log_config": [],
            "min_ports_per_vm": 0,
            "name": "vault-nat-1",
            "nat_ip_allocate_option": "MANUAL_ONLY",
            "nat_ips": [
              "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/addresses/vault-nat-external-0",
              "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/addresses/vault-nat-external-1"
            ],
            "project": "cloudops-dev-eu-svc-1afa",
            "region": "europe-west1",
            "router": "vault-router",
            "source_subnetwork_ip_ranges_to_nat": "LIST_OF_SUBNETWORKS",
            "subnetwork": [
              {
                "name": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/subnetworks/vault-subnet",
                "secondary_ip_range_names": [],
                "source_ip_ranges_to_nat": [
                  "PRIMARY_IP_RANGE"
                ]
              }
            ],
            "tcp_established_idle_timeout_sec": 1200,
            "tcp_transitory_idle_timeout_sec": 30,
            "timeouts": null,
            "udp_idle_timeout_sec": 30
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_compute_address.vault-nat",
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_compute_router.vault-router",
            "module.vault.google_compute_subnetwork.vault-subnet",
            "module.vault.google_project_service.service"
          ]
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_compute_subnetwork",
      "name": "vault-subnet",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "creation_timestamp": "2022-03-17T07:21:14.050-07:00",
            "description": "",
            "external_ipv6_prefix": "",
            "fingerprint": null,
            "gateway_address": "10.127.0.1",
            "id": "projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/subnetworks/vault-subnet",
            "ip_cidr_range": "10.127.0.0/20",
            "ipv6_access_type": "",
            "ipv6_cidr_range": "",
            "log_config": [],
            "name": "vault-subnet",
            "network": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/global/networks/vault-network",
            "private_ip_google_access": true,
            "private_ipv6_google_access": "DISABLE_GOOGLE_ACCESS",
            "project": "cloudops-dev-eu-svc-1afa",
            "purpose": "PRIVATE",
            "region": "europe-west1",
            "role": "",
            "secondary_ip_range": [],
            "self_link": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/subnetworks/vault-subnet",
            "stack_type": "IPV4_ONLY",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_project_service.service"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_project_service",
      "name": "service",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": "cloudkms.googleapis.com",
          "schema_version": 0,
          "attributes": {
            "disable_dependent_services": null,
            "disable_on_destroy": false,
            "id": "cloudops-dev-eu-svc-1afa/cloudkms.googleapis.com",
            "project": "cloudops-dev-eu-svc-1afa",
            "service": "cloudkms.googleapis.com",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDAwfX0=",
          "create_before_destroy": true
        },
        {
          "index_key": "cloudresourcemanager.googleapis.com",
          "schema_version": 0,
          "attributes": {
            "disable_dependent_services": null,
            "disable_on_destroy": false,
            "id": "cloudops-dev-eu-svc-1afa/cloudresourcemanager.googleapis.com",
            "project": "cloudops-dev-eu-svc-1afa",
            "service": "cloudresourcemanager.googleapis.com",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDAwfX0=",
          "create_before_destroy": true
        },
        {
          "index_key": "compute.googleapis.com",
          "schema_version": 0,
          "attributes": {
            "disable_dependent_services": null,
            "disable_on_destroy": false,
            "id": "cloudops-dev-eu-svc-1afa/compute.googleapis.com",
            "project": "cloudops-dev-eu-svc-1afa",
            "service": "compute.googleapis.com",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDAwfX0=",
          "create_before_destroy": true
        },
        {
          "index_key": "iam.googleapis.com",
          "schema_version": 0,
          "attributes": {
            "disable_dependent_services": null,
            "disable_on_destroy": false,
            "id": "cloudops-dev-eu-svc-1afa/iam.googleapis.com",
            "project": "cloudops-dev-eu-svc-1afa",
            "service": "iam.googleapis.com",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDAwfX0=",
          "create_before_destroy": true
        },
        {
          "index_key": "logging.googleapis.com",
          "schema_version": 0,
          "attributes": {
            "disable_dependent_services": null,
            "disable_on_destroy": false,
            "id": "cloudops-dev-eu-svc-1afa/logging.googleapis.com",
            "project": "cloudops-dev-eu-svc-1afa",
            "service": "logging.googleapis.com",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDAwfX0=",
          "create_before_destroy": true
        },
        {
          "index_key": "monitoring.googleapis.com",
          "schema_version": 0,
          "attributes": {
            "disable_dependent_services": null,
            "disable_on_destroy": false,
            "id": "cloudops-dev-eu-svc-1afa/monitoring.googleapis.com",
            "project": "cloudops-dev-eu-svc-1afa",
            "service": "monitoring.googleapis.com",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInJlYWQiOjYwMDAwMDAwMDAwMCwidXBkYXRlIjoxMjAwMDAwMDAwMDAwfX0=",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_service_account",
      "name": "vault-admin",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "account_id": "vault-admin",
            "description": "",
            "disabled": false,
            "display_name": "Vault Admin",
            "email": "vault-admin@cloudops-dev-eu-svc-1afa.iam.gserviceaccount.com",
            "id": "projects/cloudops-dev-eu-svc-1afa/serviceAccounts/vault-admin@cloudops-dev-eu-svc-1afa.iam.gserviceaccount.com",
            "name": "projects/cloudops-dev-eu-svc-1afa/serviceAccounts/vault-admin@cloudops-dev-eu-svc-1afa.iam.gserviceaccount.com",
            "project": "cloudops-dev-eu-svc-1afa",
            "timeouts": null,
            "unique_id": "108815843273111669932"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjozMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.vault.google_project_service.service"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault",
      "mode": "managed",
      "type": "google_storage_bucket",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "cors": [],
            "default_event_based_hold": false,
            "encryption": [],
            "force_destroy": false,
            "id": "cloudops-dev-eu-svc-1afa-vault-data",
            "labels": null,
            "lifecycle_rule": [],
            "location": "US",
            "logging": [],
            "name": "cloudops-dev-eu-svc-1afa-vault-data",
            "project": "cloudops-dev-eu-svc-1afa",
            "requester_pays": false,
            "retention_policy": [],
            "self_link": "https://www.googleapis.com/storage/v1/b/cloudops-dev-eu-svc-1afa-vault-data",
            "storage_class": "MULTI_REGIONAL",
            "timeouts": null,
            "uniform_bucket_level_access": false,
            "url": "gs://cloudops-dev-eu-svc-1afa-vault-data",
            "versioning": [
              {
                "enabled": false
              }
            ],
            "website": []
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsInJlYWQiOjI0MDAwMDAwMDAwMCwidXBkYXRlIjoyNDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.vault.google_project_service.service"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "data",
      "type": "google_compute_zones",
      "name": "available",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "projects/cloudops-dev-eu-svc-1afa/regions/europe-west1",
            "names": [
              "europe-west1-b",
              "europe-west1-c",
              "europe-west1-d"
            ],
            "project": "cloudops-dev-eu-svc-1afa",
            "region": "europe-west1",
            "status": null
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "data",
      "type": "template_file",
      "name": "vault-config",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "6fbcc1a1b79fcfd3af0b16cfe7a303ec0f5957f6a2f27c2040566d7651c50ce6",
            "rendered": "# Run Vault in HA mode. Even if there's only one Vault node, it doesn't hurt to\n# have this set.\napi_addr     = \"https://35.189.193.146:8200\"\n# LOCAL_IP is replaced with the eth0 IP address by the startup script.\ncluster_addr = \"https://LOCAL_IP:8201\"\n\n# Set debugging level\nlog_level = \"warn\"\n\n# Enable the UI\nui = true\n\n# Enable plugin directory\nplugin_directory = \"/etc/vault.d/plugins\"\n\n# Enable auto-unsealing with Google Cloud KMS\nseal \"gcpckms\" {\n  project    = \"cloudops-dev-eu-svc-1afa\"\n  region     = \"europe-west1\"\n  key_ring   = \"vault\"\n  crypto_key = \"vault-init\"\n}\n\n# Enable HA backend storage with GCS\nstorage \"gcs\" {\n  bucket     = \"cloudops-dev-eu-svc-1afa-vault-data\"\n  ha_enabled = \"true\"\n}\n\n# Create local non-TLS listener\nlistener \"tcp\" {\n  address     = \"127.0.0.1:8200\"\n  tls_disable = 1\n}\n\n# Create non-TLS listener for the HTTP legacy health checks.  Make sure the VPC\n# firewall doesn't allow traffic to this port except from the probe IP range.\nlistener \"tcp\" {\n  address     = \"35.189.193.146:58200\"\n  tls_disable = 1\n}\n\n# Create an mTLS listener on the load balancer address\nlistener \"tcp\" {\n  address            = \"35.189.193.146:8200\"\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\n\n  tls_disable_client_certs           = \"false\"\n  tls_require_and_verify_client_cert = \"false\"\n}\n\n# Create an mTLS listener locally. Client's shouldn't talk to Vault directly,\n# but not all clients are well-behaved. This is also needed so the cluster\n# nodes can communicate with each other.\nlistener \"tcp\" {\n  address            = \"LOCAL_IP:8200\"\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\n\n  tls_disable_client_certs           = \"false\"\n  tls_require_and_verify_client_cert = \"false\"\n}\n\n# Send data to statsd (Stackdriver monitoring)\ntelemetry {\n  statsd_address   = \"127.0.0.1:8125\"\n  disable_hostname = true\n}\n",
            "template": "# Run Vault in HA mode. Even if there's only one Vault node, it doesn't hurt to\n# have this set.\napi_addr     = \"${api_addr}\"\n# LOCAL_IP is replaced with the eth0 IP address by the startup script.\ncluster_addr = \"https://LOCAL_IP:8201\"\n\n# Set debugging level\nlog_level = \"${vault_log_level}\"\n\n# Enable the UI\nui = ${vault_ui_enabled == \"true\" ? true : false}\n\n# Enable plugin directory\nplugin_directory = \"/etc/vault.d/plugins\"\n\n# Enable auto-unsealing with Google Cloud KMS\nseal \"gcpckms\" {\n  project    = \"${kms_project}\"\n  region     = \"${kms_location}\"\n  key_ring   = \"${kms_keyring}\"\n  crypto_key = \"${kms_crypto_key}\"\n}\n\n# Enable HA backend storage with GCS\nstorage \"gcs\" {\n  bucket     = \"${storage_bucket}\"\n  ha_enabled = \"true\"\n}\n\n# Create local non-TLS listener\nlistener \"tcp\" {\n  address     = \"127.0.0.1:${vault_port}\"\n  tls_disable = 1\n}\n\n# Create non-TLS listener for the HTTP legacy health checks.  Make sure the VPC\n# firewall doesn't allow traffic to this port except from the probe IP range.\nlistener \"tcp\" {\n  address     = \"${lb_ip}:${vault_proxy_port}\"\n  tls_disable = 1\n}\n\n# Create an mTLS listener on the load balancer address\nlistener \"tcp\" {\n  address            = \"${lb_ip}:${vault_port}\"\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\n\n  tls_disable_client_certs           = \"${vault_tls_disable_client_certs}\"\n  tls_require_and_verify_client_cert = \"${vault_tls_require_and_verify_client_cert}\"\n}\n\n# Create an mTLS listener locally. Client's shouldn't talk to Vault directly,\n# but not all clients are well-behaved. This is also needed so the cluster\n# nodes can communicate with each other.\nlistener \"tcp\" {\n  address            = \"LOCAL_IP:${vault_port}\"\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\n\n  tls_disable_client_certs           = \"${vault_tls_disable_client_certs}\"\n  tls_require_and_verify_client_cert = \"${vault_tls_require_and_verify_client_cert}\"\n}\n\n# Send data to statsd (Stackdriver monitoring)\ntelemetry {\n  statsd_address   = \"127.0.0.1:8125\"\n  disable_hostname = true\n}\n",
            "vars": {
              "api_addr": "https://35.189.193.146:8200",
              "kms_crypto_key": "vault-init",
              "kms_keyring": "vault",
              "kms_location": "europe-west1",
              "kms_project": "cloudops-dev-eu-svc-1afa",
              "lb_ip": "35.189.193.146",
              "storage_bucket": "cloudops-dev-eu-svc-1afa-vault-data",
              "vault_log_level": "warn",
              "vault_port": "8200",
              "vault_proxy_port": "58200",
              "vault_tls_disable_client_certs": "false",
              "vault_tls_require_and_verify_client_cert": "false",
              "vault_ui_enabled": "true"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "data",
      "type": "template_file",
      "name": "vault-startup-script",
      "provider": "provider[\"registry.terraform.io/hashicorp/template\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "filename": null,
            "id": "c49fb372f28ade5e7cb4db40d1213fdfefde4fd17c5fe572f730ac3dd086be6a",
            "rendered": "#! /usr/bin/env bash\nset -xe\nset -o pipefail\n\n# Only run the script once\nif [ -f ~/.startup-script-complete ]; then\n  echo \"Startup script already ran, exiting\"\n  exit 0\nfi\n\n# Data\nLOCAL_IP=\"$(curl -sf -H \"Metadata-Flavor: Google\" http://metadata/computeMetadata/v1/instance/network-interfaces/0/ip)\"\n\n# Allow users to specify an HTTP proxy for egress instead of a NAT\nif [ ! -z '' ]; then\n  export http_proxy=\n  export https_proxy=$http_proxy\nfi\n\n# Get Vault up and running as quickly as possible to get the auto-heal health\n# check passing.  This results in faster recovery and faster rolling upgrades.\n\n# Deps\nexport DEBIAN_FRONTEND=noninteractive\n\n# Download and install Vault\ncurl -sLfo /tmp/vault.zip \"https://releases.hashicorp.com/vault/1.6.0/vault_1.6.0_linux_amd64.zip\"\n# Unzip without having to apt install unzip\n(echo \"import sys\"; echo \"import zipfile\"; echo \"with zipfile.ZipFile(sys.argv[1]) as z:\"; echo '  z.extractall(\"/tmp\")') | python3 - /tmp/vault.zip\ninstall -o0 -g0 -m0755 -D /tmp/vault /usr/local/bin/vault\nrm /tmp/vault.zip /tmp/vault\n\n# Give Vault the ability to run mlock as non-root\nif ! [[ -x /sbin/setcap ]]; then\n  apt install -qq -y libcap2-bin\nfi\n/sbin/setcap cap_ipc_lock=+ep /usr/local/bin/vault\n\n# Add Vault user\nuseradd -d /etc/vault.d -s /bin/false vault\n\n# Vault config\nmkdir -p /etc/vault.d\nmkdir /etc/vault.d/plugins\ncat \u003c\u003c\"EOF\" \u003e /etc/vault.d/config.hcl\n# Run Vault in HA mode. Even if there's only one Vault node, it doesn't hurt to\n# have this set.\napi_addr     = \"https://35.189.193.146:8200\"\n# LOCAL_IP is replaced with the eth0 IP address by the startup script.\ncluster_addr = \"https://LOCAL_IP:8201\"\n\n# Set debugging level\nlog_level = \"warn\"\n\n# Enable the UI\nui = true\n\n# Enable plugin directory\nplugin_directory = \"/etc/vault.d/plugins\"\n\n# Enable auto-unsealing with Google Cloud KMS\nseal \"gcpckms\" {\n  project    = \"cloudops-dev-eu-svc-1afa\"\n  region     = \"europe-west1\"\n  key_ring   = \"vault\"\n  crypto_key = \"vault-init\"\n}\n\n# Enable HA backend storage with GCS\nstorage \"gcs\" {\n  bucket     = \"cloudops-dev-eu-svc-1afa-vault-data\"\n  ha_enabled = \"true\"\n}\n\n# Create local non-TLS listener\nlistener \"tcp\" {\n  address     = \"127.0.0.1:8200\"\n  tls_disable = 1\n}\n\n# Create non-TLS listener for the HTTP legacy health checks.  Make sure the VPC\n# firewall doesn't allow traffic to this port except from the probe IP range.\nlistener \"tcp\" {\n  address     = \"35.189.193.146:58200\"\n  tls_disable = 1\n}\n\n# Create an mTLS listener on the load balancer address\nlistener \"tcp\" {\n  address            = \"35.189.193.146:8200\"\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\n\n  tls_disable_client_certs           = \"false\"\n  tls_require_and_verify_client_cert = \"false\"\n}\n\n# Create an mTLS listener locally. Client's shouldn't talk to Vault directly,\n# but not all clients are well-behaved. This is also needed so the cluster\n# nodes can communicate with each other.\nlistener \"tcp\" {\n  address            = \"LOCAL_IP:8200\"\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\n\n  tls_disable_client_certs           = \"false\"\n  tls_require_and_verify_client_cert = \"false\"\n}\n\n# Send data to statsd (Stackdriver monitoring)\ntelemetry {\n  statsd_address   = \"127.0.0.1:8125\"\n  disable_hostname = true\n}\n\nEOF\nchmod 0600 /etc/vault.d/config.hcl\n\n# Sub in local IP\n# $$ is correct here because we are in terraform template\nsed -i \"s/LOCAL_IP/${LOCAL_IP}/g\" /etc/vault.d/config.hcl\n\n# Service environment\ncat \u003c\u003c\"EOF\" \u003e /etc/vault.d/vault.env\nVAULT_ARGS=\nEOF\nchmod 0600 /etc/vault.d/vault.env\n\n# Download TLS files from GCS\nmkdir -p /etc/vault.d/tls\ngsutil cp \"gs://cloudops-dev-eu-svc-1afa-vault-data/ca.crt\" /etc/vault.d/tls/ca.crt\ngsutil cp \"gs://cloudops-dev-eu-svc-1afa-vault-data/vault.crt\" /etc/vault.d/tls/vault.crt\ngsutil cp \"gs://cloudops-dev-eu-svc-1afa-vault-data/vault.key.enc\" /etc/vault.d/tls/vault.key.enc\n\n# Decrypt the Vault private key\nbase64 --decode \u003c /etc/vault.d/tls/vault.key.enc | gcloud kms decrypt \\\n  --project=\"cloudops-dev-eu-svc-1afa\" \\\n  --key=\"projects/cloudops-dev-eu-svc-1afa/locations/europe-west1/keyRings/vault/cryptoKeys/vault-init\" \\\n  --plaintext-file=/etc/vault.d/tls/vault.key \\\n  --ciphertext-file=-\n\n# Make sure Vault owns everything\nchmod 700 /etc/vault.d/tls\nchmod 600 /etc/vault.d/tls/vault.key\nchown -R vault:vault /etc/vault.d\nrm /etc/vault.d/tls/vault.key.enc\n\n# Make audit files\nmkdir -p /var/log/vault\ntouch /var/log/vault/{audit,server}.log\nchmod 0640 /var/log/vault/{audit,server}.log\nchown -R vault:adm /var/log/vault\n\n# Add the TLS ca.crt to the trusted store so plugins dont error with TLS\n# handshakes\ncp /etc/vault.d/tls/ca.crt /usr/local/share/ca-certificates/\nupdate-ca-certificates\n\n# Systemd service\ncat \u003c\u003c\"EOF\" \u003e /etc/systemd/system/vault.service\n[Unit]\nDescription=\"HashiCorp Vault\"\nDocumentation=https://www.vaultproject.io/docs/\nRequires=network-online.target\nAfter=network-online.target\n# Stop after the shutdown script stops.\nBefore=google-shutdown-scripts.service\nConditionFileNotEmpty=/etc/vault.d/config.hcl\n\n[Service]\nUser=vault\nGroup=vault\nProtectSystem=full\nProtectHome=read-only\nPrivateTmp=yes\nPrivateDevices=yes\nSecureBits=keep-caps\nStandardError=syslog\nStandardOutput=syslog\nSyslogIdentifier=vault\nAmbientCapabilities=CAP_IPC_LOCK\nCapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK\nNoNewPrivileges=yes\nEnvironmentFile=/etc/vault.d/vault.env\nExecStart=/usr/local/bin/vault server -config=/etc/vault.d/config.hcl $VAULT_ARGS\nExecReload=/bin/kill --signal HUP $MAINPID\nKillMode=process\nKillSignal=SIGINT\nRestart=on-failure\nRestartSec=5\nTimeoutStopSec=30\n\n[Install]\nWantedBy=multi-user.target\nEOF\nchmod 0644 /etc/systemd/system/vault.service\nsystemctl daemon-reload\nsystemctl enable vault\nsystemctl start vault\n\n## AT THIS POINT VAULT HEALTH CHECKS SHOULD START PASSING\n\n# Prevent core dumps - from all attack vectors\ncat \u003c\u003c\"EOF\" \u003e /etc/sysctl.d/50-coredump.conf\nkernel.core_pattern=|/bin/false\nEOF\nsysctl -p /etc/sysctl.d/50-coredump.conf\n\ncat \u003c\u003c\"EOF\" \u003e /etc/security/limits.conf\n* hard core 0\nEOF\n\nmkdir -p /etc/systemd/coredump.conf.d\ncat \u003c\u003c\"EOF\" \u003e /etc/systemd/coredump.conf.d/disable.conf\n[Coredump]\nStorage=none\nEOF\n\ncat \u003c\u003c\"EOF\" \u003e\u003e /etc/sysctl.conf\nfs.suid_dumpable = 0\nEOF\nsysctl -p\n\ncat \u003c\u003c\"EOF\" \u003e /etc/profile.d/ulimit.sh\nulimit -S -c 0 \u003e /dev/null  2\u003e\u00261\nEOF\nsource /etc/profile.d/ulimit.sh\n\n# Reload any systemd changes for core dumps\nsystemctl daemon-reload\n\n# Setup vault env\ncat \u003c\u003c\"EOF\" \u003e /etc/profile.d/vault.sh\nexport VAULT_ADDR=\"http://127.0.0.1:8200\"\n\n# Ignore history from any Vault commands\nexport HISTIGNORE=\"\u0026:vault*\"\nEOF\nchmod 644 /etc/profile.d/vault.sh\nsource /etc/profile.d/vault.sh\n\n# Pull Vault data from syslog into a file for fluentd\ncat \u003c\u003c\"EOF\" \u003e /etc/rsyslog.d/vault.conf\n#\n# Extract Vault logs from syslog\n#\n\n# Only include the message (Vault has its own timestamps and data)\ntemplate(name=\"OnlyMsg\" type=\"string\" string=\"%msg:2:$:drop-last-lf%\\n\")\n\nif ( $programname == \"vault\" ) then {\n  action(type=\"omfile\" file=\"/var/log/vault/server.log\" template=\"OnlyMsg\")\n  stop\n}\nEOF\nsystemctl restart rsyslog\n\n# Install Stackdriver for logging and monitoring\n# Logging Agent: https://cloud.google.com/logging/docs/agent/installation\ncurl -sSfL https://dl.google.com/cloudagents/add-logging-agent-repo.sh | bash\n# Monitoring Agent: https://cloud.google.com/monitoring/agent/installation\ncurl -sSfL https://dl.google.com/cloudagents/add-monitoring-agent-repo.sh | bash\napt-get update -yqq\n# Install structured logs\napt-get install -yqq 'stackdriver-agent=6.*' 'google-fluentd=1.*' google-fluentd-catch-all-config-structured\n\n# Start Stackdriver logging agent and setup the filesystem to be ready to\n# receive audit logs\nmkdir -p /etc/google-fluentd/config.d\ncat \u003c\u003c\"EOF\" \u003e /etc/google-fluentd/config.d/vaultproject.io.conf\n\u003csource\u003e\n  @type tail\n  format json\n\n  time_type \"string\"\n  time_format \"%Y-%m-%dT%H:%M:%S.%N%z\"\n  keep_time_key true\n\n  path /var/log/vault/audit.log\n  pos_file /var/lib/google-fluentd/pos/vault.audit.pos\n  read_from_head true\n  tag vaultproject.io/audit\n\u003c/source\u003e\n\n\u003cfilter vaultproject.io/audit\u003e\n  @type record_transformer\n  enable_ruby true\n  \u003crecord\u003e\n    message \"${record.dig('request', 'id') || '-'} ${record.dig('request', 'remote_address') || '-'} ${record.dig('auth', 'display_name') || '-'} ${record.dig('request', 'operation') || '-'} ${record.dig('request', 'path') || '-'}\"\n    host \"#{Socket.gethostname}\"\n  \u003c/record\u003e\n\u003c/filter\u003e\n\n\u003csource\u003e\n  @type tail\n  format /^(?\u003ctime\u003e[^ ]+) \\[(?\u003cseverity\u003e[^ ]+)\\][ ]+(?\u003csource\u003e[^:]+): (?\u003cmessage\u003e.*)/\n\n  time_type \"string\"\n  time_format \"%Y-%m-%dT%H:%M:%S.%N%z\"\n  keep_time_key true\n\n  path /var/log/vault/server.log\n  pos_file /var/lib/google-fluentd/pos/vault.server.pos\n  read_from_head true\n  tag vaultproject.io/server\n\u003c/source\u003e\n\n\u003cfilter vaultproject.io/server\u003e\n  @type record_transformer\n  enable_ruby true\n  \u003crecord\u003e\n    message \"${record['source']}: ${record['message']}\"\n    severity \"${(record['severity'] || '').downcase}\"\n    host \"#{Socket.gethostname}\"\n  \u003c/record\u003e\n\u003c/filter\u003e\nEOF\nsystemctl enable google-fluentd\nsystemctl restart google-fluentd\n\n# Install logrotate\napt-get install -yqq logrotate\n\n# Configure logrotate for Vault audit logs\nmkdir -p /etc/logrotate.d\ncat \u003c\u003c\"EOF\" \u003e /etc/logrotate.d/vaultproject.io\n/var/log/vault/*.log {\n  daily\n  rotate 3\n  missingok\n  compress\n  notifempty\n  create 0640 vault adm\n  sharedscripts\n  postrotate\n    /bin/systemctl reload vault 2\u003e /dev/null\n    true\n  endscript\n}\nEOF\n\n# Start Stackdriver monitoring\nmkdir -p /opt/stackdriver/collectd/etc/collectd.d /etc/stackdriver/collectd.d\ncurl -sSfLo /etc/stackdriver/collectd.d/statsd.conf \\\n  https://raw.githubusercontent.com/Stackdriver/stackdriver-agent-service-configs/master/etc/collectd.d/statsd.conf\n\n# On GCE instances, swap is not enabled.  The collectd swap plugin is enabled\n# by default and generates frequent error messages trying to divide by zero\n# when there is no swap.  This perl command is an in-place edit to disable the\n# swap plugin.  The intent is to prevent the spurious log messages and avoid\n# having to filter them in stackdriver.\n#\n# The error string related to this is:\n# `wg_typed_value_create_from_value_t_inline failed for swap/percent/value`\n# See https://issuetracker.google.com/issues/161054680#comment5\nperl -i -pe 'BEGIN{undef $/;} s,LoadPlugin swap.*?/Plugin\u003e,# swap plugin disabled by startup-script,smg' /etc/stackdriver/collectd.conf\n\nsystemctl enable stackdriver-agent\nservice stackdriver-agent restart\n\n#########################################\n##          user_startup_script        ##\n#########################################\n\n\n# Signal this script has run\ntouch ~/.startup-script-complete\n",
            "template": "#! /usr/bin/env bash\nset -xe\nset -o pipefail\n\n# Only run the script once\nif [ -f ~/.startup-script-complete ]; then\n  echo \"Startup script already ran, exiting\"\n  exit 0\nfi\n\n# Data\nLOCAL_IP=\"$(curl -sf -H \"Metadata-Flavor: Google\" http://metadata/computeMetadata/v1/instance/network-interfaces/0/ip)\"\n\n# Allow users to specify an HTTP proxy for egress instead of a NAT\nif [ ! -z '${custom_http_proxy}' ]; then\n  export http_proxy=${custom_http_proxy}\n  export https_proxy=$http_proxy\nfi\n\n# Get Vault up and running as quickly as possible to get the auto-heal health\n# check passing.  This results in faster recovery and faster rolling upgrades.\n\n# Deps\nexport DEBIAN_FRONTEND=noninteractive\n\n# Download and install Vault\ncurl -sLfo /tmp/vault.zip \"https://releases.hashicorp.com/vault/${vault_version}/vault_${vault_version}_linux_amd64.zip\"\n# Unzip without having to apt install unzip\n(echo \"import sys\"; echo \"import zipfile\"; echo \"with zipfile.ZipFile(sys.argv[1]) as z:\"; echo '  z.extractall(\"/tmp\")') | python3 - /tmp/vault.zip\ninstall -o0 -g0 -m0755 -D /tmp/vault /usr/local/bin/vault\nrm /tmp/vault.zip /tmp/vault\n\n# Give Vault the ability to run mlock as non-root\nif ! [[ -x /sbin/setcap ]]; then\n  apt install -qq -y libcap2-bin\nfi\n/sbin/setcap cap_ipc_lock=+ep /usr/local/bin/vault\n\n# Add Vault user\nuseradd -d /etc/vault.d -s /bin/false vault\n\n# Vault config\nmkdir -p /etc/vault.d\nmkdir /etc/vault.d/plugins\ncat \u003c\u003c\"EOF\" \u003e /etc/vault.d/config.hcl\n${config}\nEOF\nchmod 0600 /etc/vault.d/config.hcl\n\n# Sub in local IP\n# $$ is correct here because we are in terraform template\nsed -i \"s/LOCAL_IP/$${LOCAL_IP}/g\" /etc/vault.d/config.hcl\n\n# Service environment\ncat \u003c\u003c\"EOF\" \u003e /etc/vault.d/vault.env\nVAULT_ARGS=${vault_args}\nEOF\nchmod 0600 /etc/vault.d/vault.env\n\n# Download TLS files from GCS\nmkdir -p /etc/vault.d/tls\ngsutil cp \"gs://${vault_tls_bucket}/${vault_ca_cert_filename}\" /etc/vault.d/tls/ca.crt\ngsutil cp \"gs://${vault_tls_bucket}/${vault_tls_cert_filename}\" /etc/vault.d/tls/vault.crt\ngsutil cp \"gs://${vault_tls_bucket}/${vault_tls_key_filename}\" /etc/vault.d/tls/vault.key.enc\n\n# Decrypt the Vault private key\nbase64 --decode \u003c /etc/vault.d/tls/vault.key.enc | gcloud kms decrypt \\\n  --project=\"${kms_project}\" \\\n  --key=\"${kms_crypto_key}\" \\\n  --plaintext-file=/etc/vault.d/tls/vault.key \\\n  --ciphertext-file=-\n\n# Make sure Vault owns everything\nchmod 700 /etc/vault.d/tls\nchmod 600 /etc/vault.d/tls/vault.key\nchown -R vault:vault /etc/vault.d\nrm /etc/vault.d/tls/vault.key.enc\n\n# Make audit files\nmkdir -p /var/log/vault\ntouch /var/log/vault/{audit,server}.log\nchmod 0640 /var/log/vault/{audit,server}.log\nchown -R vault:adm /var/log/vault\n\n# Add the TLS ca.crt to the trusted store so plugins dont error with TLS\n# handshakes\ncp /etc/vault.d/tls/ca.crt /usr/local/share/ca-certificates/\nupdate-ca-certificates\n\n# Systemd service\ncat \u003c\u003c\"EOF\" \u003e /etc/systemd/system/vault.service\n[Unit]\nDescription=\"HashiCorp Vault\"\nDocumentation=https://www.vaultproject.io/docs/\nRequires=network-online.target\nAfter=network-online.target\n# Stop after the shutdown script stops.\nBefore=google-shutdown-scripts.service\nConditionFileNotEmpty=/etc/vault.d/config.hcl\n\n[Service]\nUser=vault\nGroup=vault\nProtectSystem=full\nProtectHome=read-only\nPrivateTmp=yes\nPrivateDevices=yes\nSecureBits=keep-caps\nStandardError=syslog\nStandardOutput=syslog\nSyslogIdentifier=vault\nAmbientCapabilities=CAP_IPC_LOCK\nCapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK\nNoNewPrivileges=yes\nEnvironmentFile=/etc/vault.d/vault.env\nExecStart=/usr/local/bin/vault server -config=/etc/vault.d/config.hcl $VAULT_ARGS\nExecReload=/bin/kill --signal HUP $MAINPID\nKillMode=process\nKillSignal=SIGINT\nRestart=on-failure\nRestartSec=5\nTimeoutStopSec=30\n\n[Install]\nWantedBy=multi-user.target\nEOF\nchmod 0644 /etc/systemd/system/vault.service\nsystemctl daemon-reload\nsystemctl enable vault\nsystemctl start vault\n\n## AT THIS POINT VAULT HEALTH CHECKS SHOULD START PASSING\n\n# Prevent core dumps - from all attack vectors\ncat \u003c\u003c\"EOF\" \u003e /etc/sysctl.d/50-coredump.conf\nkernel.core_pattern=|/bin/false\nEOF\nsysctl -p /etc/sysctl.d/50-coredump.conf\n\ncat \u003c\u003c\"EOF\" \u003e /etc/security/limits.conf\n* hard core 0\nEOF\n\nmkdir -p /etc/systemd/coredump.conf.d\ncat \u003c\u003c\"EOF\" \u003e /etc/systemd/coredump.conf.d/disable.conf\n[Coredump]\nStorage=none\nEOF\n\ncat \u003c\u003c\"EOF\" \u003e\u003e /etc/sysctl.conf\nfs.suid_dumpable = 0\nEOF\nsysctl -p\n\ncat \u003c\u003c\"EOF\" \u003e /etc/profile.d/ulimit.sh\nulimit -S -c 0 \u003e /dev/null  2\u003e\u00261\nEOF\nsource /etc/profile.d/ulimit.sh\n\n# Reload any systemd changes for core dumps\nsystemctl daemon-reload\n\n# Setup vault env\ncat \u003c\u003c\"EOF\" \u003e /etc/profile.d/vault.sh\nexport VAULT_ADDR=\"http://127.0.0.1:${vault_port}\"\n\n# Ignore history from any Vault commands\nexport HISTIGNORE=\"\u0026:vault*\"\nEOF\nchmod 644 /etc/profile.d/vault.sh\nsource /etc/profile.d/vault.sh\n\n# Pull Vault data from syslog into a file for fluentd\ncat \u003c\u003c\"EOF\" \u003e /etc/rsyslog.d/vault.conf\n#\n# Extract Vault logs from syslog\n#\n\n# Only include the message (Vault has its own timestamps and data)\ntemplate(name=\"OnlyMsg\" type=\"string\" string=\"%msg:2:$:drop-last-lf%\\n\")\n\nif ( $programname == \"vault\" ) then {\n  action(type=\"omfile\" file=\"/var/log/vault/server.log\" template=\"OnlyMsg\")\n  stop\n}\nEOF\nsystemctl restart rsyslog\n\n# Install Stackdriver for logging and monitoring\n# Logging Agent: https://cloud.google.com/logging/docs/agent/installation\ncurl -sSfL https://dl.google.com/cloudagents/add-logging-agent-repo.sh | bash\n# Monitoring Agent: https://cloud.google.com/monitoring/agent/installation\ncurl -sSfL https://dl.google.com/cloudagents/add-monitoring-agent-repo.sh | bash\napt-get update -yqq\n# Install structured logs\napt-get install -yqq 'stackdriver-agent=6.*' 'google-fluentd=1.*' google-fluentd-catch-all-config-structured\n\n# Start Stackdriver logging agent and setup the filesystem to be ready to\n# receive audit logs\nmkdir -p /etc/google-fluentd/config.d\ncat \u003c\u003c\"EOF\" \u003e /etc/google-fluentd/config.d/vaultproject.io.conf\n\u003csource\u003e\n  @type tail\n  format json\n\n  time_type \"string\"\n  time_format \"%Y-%m-%dT%H:%M:%S.%N%z\"\n  keep_time_key true\n\n  path /var/log/vault/audit.log\n  pos_file /var/lib/google-fluentd/pos/vault.audit.pos\n  read_from_head true\n  tag vaultproject.io/audit\n\u003c/source\u003e\n\n\u003cfilter vaultproject.io/audit\u003e\n  @type record_transformer\n  enable_ruby true\n  \u003crecord\u003e\n    message \"$${record.dig('request', 'id') || '-'} $${record.dig('request', 'remote_address') || '-'} $${record.dig('auth', 'display_name') || '-'} $${record.dig('request', 'operation') || '-'} $${record.dig('request', 'path') || '-'}\"\n    host \"#{Socket.gethostname}\"\n  \u003c/record\u003e\n\u003c/filter\u003e\n\n\u003csource\u003e\n  @type tail\n  format /^(?\u003ctime\u003e[^ ]+) \\[(?\u003cseverity\u003e[^ ]+)\\][ ]+(?\u003csource\u003e[^:]+): (?\u003cmessage\u003e.*)/\n\n  time_type \"string\"\n  time_format \"%Y-%m-%dT%H:%M:%S.%N%z\"\n  keep_time_key true\n\n  path /var/log/vault/server.log\n  pos_file /var/lib/google-fluentd/pos/vault.server.pos\n  read_from_head true\n  tag vaultproject.io/server\n\u003c/source\u003e\n\n\u003cfilter vaultproject.io/server\u003e\n  @type record_transformer\n  enable_ruby true\n  \u003crecord\u003e\n    message \"$${record['source']}: $${record['message']}\"\n    severity \"$${(record['severity'] || '').downcase}\"\n    host \"#{Socket.gethostname}\"\n  \u003c/record\u003e\n\u003c/filter\u003e\nEOF\nsystemctl enable google-fluentd\nsystemctl restart google-fluentd\n\n# Install logrotate\napt-get install -yqq logrotate\n\n# Configure logrotate for Vault audit logs\nmkdir -p /etc/logrotate.d\ncat \u003c\u003c\"EOF\" \u003e /etc/logrotate.d/vaultproject.io\n/var/log/vault/*.log {\n  daily\n  rotate 3\n  missingok\n  compress\n  notifempty\n  create 0640 vault adm\n  sharedscripts\n  postrotate\n    /bin/systemctl reload vault 2\u003e /dev/null\n    true\n  endscript\n}\nEOF\n\n# Start Stackdriver monitoring\nmkdir -p /opt/stackdriver/collectd/etc/collectd.d /etc/stackdriver/collectd.d\ncurl -sSfLo /etc/stackdriver/collectd.d/statsd.conf \\\n  https://raw.githubusercontent.com/Stackdriver/stackdriver-agent-service-configs/master/etc/collectd.d/statsd.conf\n\n# On GCE instances, swap is not enabled.  The collectd swap plugin is enabled\n# by default and generates frequent error messages trying to divide by zero\n# when there is no swap.  This perl command is an in-place edit to disable the\n# swap plugin.  The intent is to prevent the spurious log messages and avoid\n# having to filter them in stackdriver.\n#\n# The error string related to this is:\n# `wg_typed_value_create_from_value_t_inline failed for swap/percent/value`\n# See https://issuetracker.google.com/issues/161054680#comment5\nperl -i -pe 'BEGIN{undef $/;} s,LoadPlugin swap.*?/Plugin\u003e,# swap plugin disabled by startup-script,smg' /etc/stackdriver/collectd.conf\n\nsystemctl enable stackdriver-agent\nservice stackdriver-agent restart\n\n#########################################\n##          user_startup_script        ##\n#########################################\n${user_startup_script}\n\n# Signal this script has run\ntouch ~/.startup-script-complete\n",
            "vars": {
              "config": "# Run Vault in HA mode. Even if there's only one Vault node, it doesn't hurt to\n# have this set.\napi_addr     = \"https://35.189.193.146:8200\"\n# LOCAL_IP is replaced with the eth0 IP address by the startup script.\ncluster_addr = \"https://LOCAL_IP:8201\"\n\n# Set debugging level\nlog_level = \"warn\"\n\n# Enable the UI\nui = true\n\n# Enable plugin directory\nplugin_directory = \"/etc/vault.d/plugins\"\n\n# Enable auto-unsealing with Google Cloud KMS\nseal \"gcpckms\" {\n  project    = \"cloudops-dev-eu-svc-1afa\"\n  region     = \"europe-west1\"\n  key_ring   = \"vault\"\n  crypto_key = \"vault-init\"\n}\n\n# Enable HA backend storage with GCS\nstorage \"gcs\" {\n  bucket     = \"cloudops-dev-eu-svc-1afa-vault-data\"\n  ha_enabled = \"true\"\n}\n\n# Create local non-TLS listener\nlistener \"tcp\" {\n  address     = \"127.0.0.1:8200\"\n  tls_disable = 1\n}\n\n# Create non-TLS listener for the HTTP legacy health checks.  Make sure the VPC\n# firewall doesn't allow traffic to this port except from the probe IP range.\nlistener \"tcp\" {\n  address     = \"35.189.193.146:58200\"\n  tls_disable = 1\n}\n\n# Create an mTLS listener on the load balancer address\nlistener \"tcp\" {\n  address            = \"35.189.193.146:8200\"\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\n\n  tls_disable_client_certs           = \"false\"\n  tls_require_and_verify_client_cert = \"false\"\n}\n\n# Create an mTLS listener locally. Client's shouldn't talk to Vault directly,\n# but not all clients are well-behaved. This is also needed so the cluster\n# nodes can communicate with each other.\nlistener \"tcp\" {\n  address            = \"LOCAL_IP:8200\"\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\n\n  tls_disable_client_certs           = \"false\"\n  tls_require_and_verify_client_cert = \"false\"\n}\n\n# Send data to statsd (Stackdriver monitoring)\ntelemetry {\n  statsd_address   = \"127.0.0.1:8125\"\n  disable_hostname = true\n}\n",
              "custom_http_proxy": "",
              "internal_lb": "false",
              "kms_crypto_key": "projects/cloudops-dev-eu-svc-1afa/locations/europe-west1/keyRings/vault/cryptoKeys/vault-init",
              "kms_project": "cloudops-dev-eu-svc-1afa",
              "service_account_email": "vault-admin@cloudops-dev-eu-svc-1afa.iam.gserviceaccount.com",
              "user_startup_script": "",
              "vault_args": "",
              "vault_ca_cert_filename": "ca.crt",
              "vault_port": "8200",
              "vault_proxy_port": "58200",
              "vault_tls_bucket": "cloudops-dev-eu-svc-1afa-vault-data",
              "vault_tls_cert_filename": "vault.crt",
              "vault_tls_key_filename": "vault.key.enc",
              "vault_version": "1.6.0"
            }
          },
          "sensitive_attributes": []
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_compute_forwarding_rule",
      "name": "external",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "all_ports": false,
            "allow_global_access": false,
            "backend_service": "",
            "creation_timestamp": "2022-03-17T07:21:11.242-07:00",
            "description": "",
            "id": "projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/forwardingRules/vault-external",
            "ip_address": "35.189.193.146",
            "ip_protocol": "TCP",
            "is_mirroring_collector": false,
            "label_fingerprint": "42WmSpB8rSM=",
            "labels": null,
            "load_balancing_scheme": "EXTERNAL",
            "name": "vault-external",
            "network": "",
            "network_tier": "PREMIUM",
            "port_range": "8200",
            "ports": null,
            "project": "cloudops-dev-eu-svc-1afa",
            "region": "europe-west1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/forwardingRules/vault-external",
            "service_label": "",
            "service_name": "",
            "subnetwork": "",
            "target": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/targetPools/vault-tp",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_compute_address.vault",
            "module.vault.google_compute_address.vault_ilb",
            "module.vault.google_project_service.service",
            "module.vault.module.cluster.google_compute_http_health_check.vault",
            "module.vault.module.cluster.google_compute_target_pool.vault"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_compute_health_check",
      "name": "autoheal",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "check_interval_sec": 10,
            "creation_timestamp": "2022-03-17T07:20:46.392-07:00",
            "description": "",
            "grpc_health_check": [],
            "healthy_threshold": 1,
            "http2_health_check": [],
            "http_health_check": [],
            "https_health_check": [
              {
                "host": "",
                "port": 8200,
                "port_name": "",
                "port_specification": "",
                "proxy_header": "NONE",
                "request_path": "/v1/sys/health?uninitcode=200\u0026standbyok=true",
                "response": ""
              }
            ],
            "id": "projects/cloudops-dev-eu-svc-1afa/global/healthChecks/vault-health-autoheal",
            "log_config": [
              {
                "enable": false
              }
            ],
            "name": "vault-health-autoheal",
            "project": "cloudops-dev-eu-svc-1afa",
            "self_link": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/global/healthChecks/vault-health-autoheal",
            "ssl_health_check": [],
            "tcp_health_check": [],
            "timeout_sec": 5,
            "timeouts": null,
            "type": "HTTPS",
            "unhealthy_threshold": 2
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19"
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_compute_http_health_check",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "check_interval_sec": 15,
            "creation_timestamp": "2022-03-17T07:20:46.496-07:00",
            "description": "",
            "healthy_threshold": 2,
            "host": "",
            "id": "projects/cloudops-dev-eu-svc-1afa/global/httpHealthChecks/vault-health-legacy",
            "name": "vault-health-legacy",
            "port": 58200,
            "project": "cloudops-dev-eu-svc-1afa",
            "request_path": "/v1/sys/health?uninitcode=200",
            "self_link": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/global/httpHealthChecks/vault-health-legacy",
            "timeout_sec": 5,
            "timeouts": null,
            "unhealthy_threshold": 2
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_compute_instance_template",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "advanced_machine_features": [],
            "can_ip_forward": false,
            "confidential_instance_config": null,
            "description": "",
            "disk": [
              {
                "auto_delete": true,
                "boot": true,
                "device_name": "persistent-disk-0",
                "disk_encryption_key": [],
                "disk_name": "",
                "disk_size_gb": 0,
                "disk_type": "pd-ssd",
                "interface": "SCSI",
                "labels": null,
                "mode": "READ_WRITE",
                "resource_policies": null,
                "source": "",
                "source_image": "projects/debian-cloud/global/images/family/debian-10",
                "type": "PERSISTENT"
              }
            ],
            "guest_accelerator": [],
            "id": "projects/cloudops-dev-eu-svc-1afa/global/instanceTemplates/vault-20220317142136694600000001",
            "instance_description": "",
            "labels": null,
            "machine_type": "e2-standard-2",
            "metadata": {
              "google-compute-enable-virtio-rng": "true",
              "startup-script": "#! /usr/bin/env bash\nset -xe\nset -o pipefail\n\n# Only run the script once\nif [ -f ~/.startup-script-complete ]; then\n  echo \"Startup script already ran, exiting\"\n  exit 0\nfi\n\n# Data\nLOCAL_IP=\"$(curl -sf -H \"Metadata-Flavor: Google\" http://metadata/computeMetadata/v1/instance/network-interfaces/0/ip)\"\n\n# Allow users to specify an HTTP proxy for egress instead of a NAT\nif [ ! -z '' ]; then\n  export http_proxy=\n  export https_proxy=$http_proxy\nfi\n\n# Get Vault up and running as quickly as possible to get the auto-heal health\n# check passing.  This results in faster recovery and faster rolling upgrades.\n\n# Deps\nexport DEBIAN_FRONTEND=noninteractive\n\n# Download and install Vault\ncurl -sLfo /tmp/vault.zip \"https://releases.hashicorp.com/vault/1.6.0/vault_1.6.0_linux_amd64.zip\"\n# Unzip without having to apt install unzip\n(echo \"import sys\"; echo \"import zipfile\"; echo \"with zipfile.ZipFile(sys.argv[1]) as z:\"; echo '  z.extractall(\"/tmp\")') | python3 - /tmp/vault.zip\ninstall -o0 -g0 -m0755 -D /tmp/vault /usr/local/bin/vault\nrm /tmp/vault.zip /tmp/vault\n\n# Give Vault the ability to run mlock as non-root\nif ! [[ -x /sbin/setcap ]]; then\n  apt install -qq -y libcap2-bin\nfi\n/sbin/setcap cap_ipc_lock=+ep /usr/local/bin/vault\n\n# Add Vault user\nuseradd -d /etc/vault.d -s /bin/false vault\n\n# Vault config\nmkdir -p /etc/vault.d\nmkdir /etc/vault.d/plugins\ncat \u003c\u003c\"EOF\" \u003e /etc/vault.d/config.hcl\n# Run Vault in HA mode. Even if there's only one Vault node, it doesn't hurt to\n# have this set.\napi_addr     = \"https://35.189.193.146:8200\"\n# LOCAL_IP is replaced with the eth0 IP address by the startup script.\ncluster_addr = \"https://LOCAL_IP:8201\"\n\n# Set debugging level\nlog_level = \"warn\"\n\n# Enable the UI\nui = true\n\n# Enable plugin directory\nplugin_directory = \"/etc/vault.d/plugins\"\n\n# Enable auto-unsealing with Google Cloud KMS\nseal \"gcpckms\" {\n  project    = \"cloudops-dev-eu-svc-1afa\"\n  region     = \"europe-west1\"\n  key_ring   = \"vault\"\n  crypto_key = \"vault-init\"\n}\n\n# Enable HA backend storage with GCS\nstorage \"gcs\" {\n  bucket     = \"cloudops-dev-eu-svc-1afa-vault-data\"\n  ha_enabled = \"true\"\n}\n\n# Create local non-TLS listener\nlistener \"tcp\" {\n  address     = \"127.0.0.1:8200\"\n  tls_disable = 1\n}\n\n# Create non-TLS listener for the HTTP legacy health checks.  Make sure the VPC\n# firewall doesn't allow traffic to this port except from the probe IP range.\nlistener \"tcp\" {\n  address     = \"35.189.193.146:58200\"\n  tls_disable = 1\n}\n\n# Create an mTLS listener on the load balancer address\nlistener \"tcp\" {\n  address            = \"35.189.193.146:8200\"\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\n\n  tls_disable_client_certs           = \"false\"\n  tls_require_and_verify_client_cert = \"false\"\n}\n\n# Create an mTLS listener locally. Client's shouldn't talk to Vault directly,\n# but not all clients are well-behaved. This is also needed so the cluster\n# nodes can communicate with each other.\nlistener \"tcp\" {\n  address            = \"LOCAL_IP:8200\"\n  tls_cert_file      = \"/etc/vault.d/tls/vault.crt\"\n  tls_key_file       = \"/etc/vault.d/tls/vault.key\"\n  tls_client_ca_file = \"/etc/vault.d/tls/ca.crt\"\n\n  tls_disable_client_certs           = \"false\"\n  tls_require_and_verify_client_cert = \"false\"\n}\n\n# Send data to statsd (Stackdriver monitoring)\ntelemetry {\n  statsd_address   = \"127.0.0.1:8125\"\n  disable_hostname = true\n}\n\nEOF\nchmod 0600 /etc/vault.d/config.hcl\n\n# Sub in local IP\n# $$ is correct here because we are in terraform template\nsed -i \"s/LOCAL_IP/${LOCAL_IP}/g\" /etc/vault.d/config.hcl\n\n# Service environment\ncat \u003c\u003c\"EOF\" \u003e /etc/vault.d/vault.env\nVAULT_ARGS=\nEOF\nchmod 0600 /etc/vault.d/vault.env\n\n# Download TLS files from GCS\nmkdir -p /etc/vault.d/tls\ngsutil cp \"gs://cloudops-dev-eu-svc-1afa-vault-data/ca.crt\" /etc/vault.d/tls/ca.crt\ngsutil cp \"gs://cloudops-dev-eu-svc-1afa-vault-data/vault.crt\" /etc/vault.d/tls/vault.crt\ngsutil cp \"gs://cloudops-dev-eu-svc-1afa-vault-data/vault.key.enc\" /etc/vault.d/tls/vault.key.enc\n\n# Decrypt the Vault private key\nbase64 --decode \u003c /etc/vault.d/tls/vault.key.enc | gcloud kms decrypt \\\n  --project=\"cloudops-dev-eu-svc-1afa\" \\\n  --key=\"projects/cloudops-dev-eu-svc-1afa/locations/europe-west1/keyRings/vault/cryptoKeys/vault-init\" \\\n  --plaintext-file=/etc/vault.d/tls/vault.key \\\n  --ciphertext-file=-\n\n# Make sure Vault owns everything\nchmod 700 /etc/vault.d/tls\nchmod 600 /etc/vault.d/tls/vault.key\nchown -R vault:vault /etc/vault.d\nrm /etc/vault.d/tls/vault.key.enc\n\n# Make audit files\nmkdir -p /var/log/vault\ntouch /var/log/vault/{audit,server}.log\nchmod 0640 /var/log/vault/{audit,server}.log\nchown -R vault:adm /var/log/vault\n\n# Add the TLS ca.crt to the trusted store so plugins dont error with TLS\n# handshakes\ncp /etc/vault.d/tls/ca.crt /usr/local/share/ca-certificates/\nupdate-ca-certificates\n\n# Systemd service\ncat \u003c\u003c\"EOF\" \u003e /etc/systemd/system/vault.service\n[Unit]\nDescription=\"HashiCorp Vault\"\nDocumentation=https://www.vaultproject.io/docs/\nRequires=network-online.target\nAfter=network-online.target\n# Stop after the shutdown script stops.\nBefore=google-shutdown-scripts.service\nConditionFileNotEmpty=/etc/vault.d/config.hcl\n\n[Service]\nUser=vault\nGroup=vault\nProtectSystem=full\nProtectHome=read-only\nPrivateTmp=yes\nPrivateDevices=yes\nSecureBits=keep-caps\nStandardError=syslog\nStandardOutput=syslog\nSyslogIdentifier=vault\nAmbientCapabilities=CAP_IPC_LOCK\nCapabilityBoundingSet=CAP_SYSLOG CAP_IPC_LOCK\nNoNewPrivileges=yes\nEnvironmentFile=/etc/vault.d/vault.env\nExecStart=/usr/local/bin/vault server -config=/etc/vault.d/config.hcl $VAULT_ARGS\nExecReload=/bin/kill --signal HUP $MAINPID\nKillMode=process\nKillSignal=SIGINT\nRestart=on-failure\nRestartSec=5\nTimeoutStopSec=30\n\n[Install]\nWantedBy=multi-user.target\nEOF\nchmod 0644 /etc/systemd/system/vault.service\nsystemctl daemon-reload\nsystemctl enable vault\nsystemctl start vault\n\n## AT THIS POINT VAULT HEALTH CHECKS SHOULD START PASSING\n\n# Prevent core dumps - from all attack vectors\ncat \u003c\u003c\"EOF\" \u003e /etc/sysctl.d/50-coredump.conf\nkernel.core_pattern=|/bin/false\nEOF\nsysctl -p /etc/sysctl.d/50-coredump.conf\n\ncat \u003c\u003c\"EOF\" \u003e /etc/security/limits.conf\n* hard core 0\nEOF\n\nmkdir -p /etc/systemd/coredump.conf.d\ncat \u003c\u003c\"EOF\" \u003e /etc/systemd/coredump.conf.d/disable.conf\n[Coredump]\nStorage=none\nEOF\n\ncat \u003c\u003c\"EOF\" \u003e\u003e /etc/sysctl.conf\nfs.suid_dumpable = 0\nEOF\nsysctl -p\n\ncat \u003c\u003c\"EOF\" \u003e /etc/profile.d/ulimit.sh\nulimit -S -c 0 \u003e /dev/null  2\u003e\u00261\nEOF\nsource /etc/profile.d/ulimit.sh\n\n# Reload any systemd changes for core dumps\nsystemctl daemon-reload\n\n# Setup vault env\ncat \u003c\u003c\"EOF\" \u003e /etc/profile.d/vault.sh\nexport VAULT_ADDR=\"http://127.0.0.1:8200\"\n\n# Ignore history from any Vault commands\nexport HISTIGNORE=\"\u0026:vault*\"\nEOF\nchmod 644 /etc/profile.d/vault.sh\nsource /etc/profile.d/vault.sh\n\n# Pull Vault data from syslog into a file for fluentd\ncat \u003c\u003c\"EOF\" \u003e /etc/rsyslog.d/vault.conf\n#\n# Extract Vault logs from syslog\n#\n\n# Only include the message (Vault has its own timestamps and data)\ntemplate(name=\"OnlyMsg\" type=\"string\" string=\"%msg:2:$:drop-last-lf%\\n\")\n\nif ( $programname == \"vault\" ) then {\n  action(type=\"omfile\" file=\"/var/log/vault/server.log\" template=\"OnlyMsg\")\n  stop\n}\nEOF\nsystemctl restart rsyslog\n\n# Install Stackdriver for logging and monitoring\n# Logging Agent: https://cloud.google.com/logging/docs/agent/installation\ncurl -sSfL https://dl.google.com/cloudagents/add-logging-agent-repo.sh | bash\n# Monitoring Agent: https://cloud.google.com/monitoring/agent/installation\ncurl -sSfL https://dl.google.com/cloudagents/add-monitoring-agent-repo.sh | bash\napt-get update -yqq\n# Install structured logs\napt-get install -yqq 'stackdriver-agent=6.*' 'google-fluentd=1.*' google-fluentd-catch-all-config-structured\n\n# Start Stackdriver logging agent and setup the filesystem to be ready to\n# receive audit logs\nmkdir -p /etc/google-fluentd/config.d\ncat \u003c\u003c\"EOF\" \u003e /etc/google-fluentd/config.d/vaultproject.io.conf\n\u003csource\u003e\n  @type tail\n  format json\n\n  time_type \"string\"\n  time_format \"%Y-%m-%dT%H:%M:%S.%N%z\"\n  keep_time_key true\n\n  path /var/log/vault/audit.log\n  pos_file /var/lib/google-fluentd/pos/vault.audit.pos\n  read_from_head true\n  tag vaultproject.io/audit\n\u003c/source\u003e\n\n\u003cfilter vaultproject.io/audit\u003e\n  @type record_transformer\n  enable_ruby true\n  \u003crecord\u003e\n    message \"${record.dig('request', 'id') || '-'} ${record.dig('request', 'remote_address') || '-'} ${record.dig('auth', 'display_name') || '-'} ${record.dig('request', 'operation') || '-'} ${record.dig('request', 'path') || '-'}\"\n    host \"#{Socket.gethostname}\"\n  \u003c/record\u003e\n\u003c/filter\u003e\n\n\u003csource\u003e\n  @type tail\n  format /^(?\u003ctime\u003e[^ ]+) \\[(?\u003cseverity\u003e[^ ]+)\\][ ]+(?\u003csource\u003e[^:]+): (?\u003cmessage\u003e.*)/\n\n  time_type \"string\"\n  time_format \"%Y-%m-%dT%H:%M:%S.%N%z\"\n  keep_time_key true\n\n  path /var/log/vault/server.log\n  pos_file /var/lib/google-fluentd/pos/vault.server.pos\n  read_from_head true\n  tag vaultproject.io/server\n\u003c/source\u003e\n\n\u003cfilter vaultproject.io/server\u003e\n  @type record_transformer\n  enable_ruby true\n  \u003crecord\u003e\n    message \"${record['source']}: ${record['message']}\"\n    severity \"${(record['severity'] || '').downcase}\"\n    host \"#{Socket.gethostname}\"\n  \u003c/record\u003e\n\u003c/filter\u003e\nEOF\nsystemctl enable google-fluentd\nsystemctl restart google-fluentd\n\n# Install logrotate\napt-get install -yqq logrotate\n\n# Configure logrotate for Vault audit logs\nmkdir -p /etc/logrotate.d\ncat \u003c\u003c\"EOF\" \u003e /etc/logrotate.d/vaultproject.io\n/var/log/vault/*.log {\n  daily\n  rotate 3\n  missingok\n  compress\n  notifempty\n  create 0640 vault adm\n  sharedscripts\n  postrotate\n    /bin/systemctl reload vault 2\u003e /dev/null\n    true\n  endscript\n}\nEOF\n\n# Start Stackdriver monitoring\nmkdir -p /opt/stackdriver/collectd/etc/collectd.d /etc/stackdriver/collectd.d\ncurl -sSfLo /etc/stackdriver/collectd.d/statsd.conf \\\n  https://raw.githubusercontent.com/Stackdriver/stackdriver-agent-service-configs/master/etc/collectd.d/statsd.conf\n\n# On GCE instances, swap is not enabled.  The collectd swap plugin is enabled\n# by default and generates frequent error messages trying to divide by zero\n# when there is no swap.  This perl command is an in-place edit to disable the\n# swap plugin.  The intent is to prevent the spurious log messages and avoid\n# having to filter them in stackdriver.\n#\n# The error string related to this is:\n# `wg_typed_value_create_from_value_t_inline failed for swap/percent/value`\n# See https://issuetracker.google.com/issues/161054680#comment5\nperl -i -pe 'BEGIN{undef $/;} s,LoadPlugin swap.*?/Plugin\u003e,# swap plugin disabled by startup-script,smg' /etc/stackdriver/collectd.conf\n\nsystemctl enable stackdriver-agent\nservice stackdriver-agent restart\n\n#########################################\n##          user_startup_script        ##\n#########################################\n\n\n# Signal this script has run\ntouch ~/.startup-script-complete\n"
            },
            "metadata_fingerprint": "LaTJ-HVnS1k=",
            "metadata_startup_script": null,
            "min_cpu_platform": "",
            "name": "vault-20220317142136694600000001",
            "name_prefix": "vault-",
            "network_interface": [
              {
                "access_config": [],
                "alias_ip_range": [],
                "ipv6_access_config": [],
                "ipv6_access_type": "",
                "name": "nic0",
                "network": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/global/networks/vault-network",
                "network_ip": "",
                "nic_type": "",
                "queue_count": 0,
                "stack_type": "",
                "subnetwork": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/subnetworks/vault-subnet",
                "subnetwork_project": "cloudops-dev-eu-svc-1afa"
              }
            ],
            "project": "cloudops-dev-eu-svc-1afa",
            "region": "europe-west1",
            "reservation_affinity": [],
            "scheduling": [
              {
                "automatic_restart": true,
                "min_node_cpus": 0,
                "node_affinities": [],
                "on_host_maintenance": "MIGRATE",
                "preemptible": false
              }
            ],
            "self_link": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/global/instanceTemplates/vault-20220317142136694600000001",
            "service_account": [
              {
                "email": "vault-admin@cloudops-dev-eu-svc-1afa.iam.gserviceaccount.com",
                "scopes": [
                  "https://www.googleapis.com/auth/cloud-platform"
                ]
              }
            ],
            "shielded_instance_config": [],
            "tags": [
              "allow-ssh",
              "allow-vault"
            ],
            "tags_fingerprint": "",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwfSwic2NoZW1hX3ZlcnNpb24iOiIxIn0=",
          "dependencies": [
            "module.vault.google_compute_address.vault",
            "module.vault.google_compute_address.vault_ilb",
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_compute_subnetwork.vault-subnet",
            "module.vault.google_project_service.service",
            "module.vault.google_service_account.vault-admin",
            "module.vault.google_storage_bucket.vault",
            "module.vault.module.cluster.data.template_file.vault-config",
            "module.vault.module.cluster.data.template_file.vault-startup-script",
            "module.vault.module.cluster.google_compute_forwarding_rule.external",
            "module.vault.module.cluster.google_compute_http_health_check.vault",
            "module.vault.module.cluster.google_compute_target_pool.vault",
            "module.vault.module.cluster.google_kms_crypto_key.vault-init",
            "module.vault.module.cluster.google_kms_key_ring.vault"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_compute_region_autoscaler",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "autoscaling_policy": [
              {
                "cooldown_period": 300,
                "cpu_utilization": [
                  {
                    "predictive_method": "NONE",
                    "target": 0.8
                  }
                ],
                "load_balancing_utilization": [],
                "max_replicas": 7,
                "metric": [],
                "min_replicas": 1,
                "mode": "ON",
                "scale_in_control": [],
                "scaling_schedules": []
              }
            ],
            "creation_timestamp": "2022-03-17T07:22:23.461-07:00",
            "description": "",
            "id": "projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/autoscalers/vault-as",
            "name": "vault-as",
            "project": "cloudops-dev-eu-svc-1afa",
            "region": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/regions/europe-west1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/autoscalers/vault-as",
            "target": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/instanceGroupManagers/vault-igm",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_compute_address.vault",
            "module.vault.google_compute_address.vault_ilb",
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_compute_subnetwork.vault-subnet",
            "module.vault.google_project_service.service",
            "module.vault.google_service_account.vault-admin",
            "module.vault.google_storage_bucket.vault",
            "module.vault.module.cluster.data.google_compute_zones.available",
            "module.vault.module.cluster.data.template_file.vault-config",
            "module.vault.module.cluster.data.template_file.vault-startup-script",
            "module.vault.module.cluster.google_compute_forwarding_rule.external",
            "module.vault.module.cluster.google_compute_health_check.autoheal",
            "module.vault.module.cluster.google_compute_http_health_check.vault",
            "module.vault.module.cluster.google_compute_instance_template.vault",
            "module.vault.module.cluster.google_compute_region_instance_group_manager.vault",
            "module.vault.module.cluster.google_compute_target_pool.vault",
            "module.vault.module.cluster.google_kms_crypto_key.vault-init",
            "module.vault.module.cluster.google_kms_key_ring.vault"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_compute_region_instance_group_manager",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/google-beta\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "auto_healing_policies": [
              {
                "health_check": "https://www.googleapis.com/compute/beta/projects/cloudops-dev-eu-svc-1afa/global/healthChecks/vault-health-autoheal",
                "initial_delay_sec": 60
              }
            ],
            "base_instance_name": "vault-europe-west1",
            "description": "",
            "distribution_policy_target_shape": "EVEN",
            "distribution_policy_zones": [
              "europe-west1-b",
              "europe-west1-c",
              "europe-west1-d"
            ],
            "fingerprint": "59Or5UegPH8=",
            "id": "projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/instanceGroupManagers/vault-igm",
            "instance_group": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/instanceGroups/vault-igm",
            "name": "vault-igm",
            "named_port": [
              {
                "name": "vault-http",
                "port": 8200
              }
            ],
            "project": "cloudops-dev-eu-svc-1afa",
            "region": "europe-west1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/instanceGroupManagers/vault-igm",
            "stateful_disk": [],
            "status": [
              {
                "is_stable": true,
                "stateful": [
                  {
                    "has_stateful_config": false,
                    "per_instance_configs": [
                      {
                        "all_effective": true
                      }
                    ]
                  }
                ],
                "version_target": [
                  {
                    "is_reached": true
                  }
                ]
              }
            ],
            "target_pools": [
              "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/targetPools/vault-tp"
            ],
            "target_size": 0,
            "timeouts": null,
            "update_policy": [
              {
                "instance_redistribution_type": "PROACTIVE",
                "max_surge_fixed": 0,
                "max_surge_percent": 0,
                "max_unavailable_fixed": 3,
                "max_unavailable_percent": 0,
                "min_ready_sec": 0,
                "minimal_action": "REPLACE",
                "replacement_method": "SUBSTITUTE",
                "type": "OPPORTUNISTIC"
              }
            ],
            "version": [
              {
                "instance_template": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/global/instanceTemplates/vault-20220317142136694600000001",
                "name": "",
                "target_size": []
              }
            ],
            "wait_for_instances": false,
            "wait_for_instances_status": "STABLE"
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjo5MDAwMDAwMDAwMDAsImRlbGV0ZSI6OTAwMDAwMDAwMDAwLCJ1cGRhdGUiOjkwMDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_compute_address.vault",
            "module.vault.google_compute_address.vault_ilb",
            "module.vault.google_compute_network.vault-network",
            "module.vault.google_compute_subnetwork.vault-subnet",
            "module.vault.google_project_service.service",
            "module.vault.google_service_account.vault-admin",
            "module.vault.google_storage_bucket.vault",
            "module.vault.module.cluster.data.google_compute_zones.available",
            "module.vault.module.cluster.data.template_file.vault-config",
            "module.vault.module.cluster.data.template_file.vault-startup-script",
            "module.vault.module.cluster.google_compute_forwarding_rule.external",
            "module.vault.module.cluster.google_compute_health_check.autoheal",
            "module.vault.module.cluster.google_compute_http_health_check.vault",
            "module.vault.module.cluster.google_compute_instance_template.vault",
            "module.vault.module.cluster.google_compute_target_pool.vault",
            "module.vault.module.cluster.google_kms_crypto_key.vault-init",
            "module.vault.module.cluster.google_kms_key_ring.vault"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_compute_target_pool",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "backup_pool": "",
            "description": "",
            "failover_ratio": 0,
            "health_checks": [
              "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/global/httpHealthChecks/vault-health-legacy"
            ],
            "id": "projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/targetPools/vault-tp",
            "instances": [],
            "name": "vault-tp",
            "project": "cloudops-dev-eu-svc-1afa",
            "region": "europe-west1",
            "self_link": "https://www.googleapis.com/compute/v1/projects/cloudops-dev-eu-svc-1afa/regions/europe-west1/targetPools/vault-tp",
            "session_affinity": "NONE",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.module.cluster.google_compute_http_health_check.vault"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_kms_crypto_key",
      "name": "vault-init",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 1,
          "attributes": {
            "destroy_scheduled_duration": "86400s",
            "id": "projects/cloudops-dev-eu-svc-1afa/locations/europe-west1/keyRings/vault/cryptoKeys/vault-init",
            "import_only": false,
            "key_ring": "projects/cloudops-dev-eu-svc-1afa/locations/europe-west1/keyRings/vault",
            "labels": null,
            "name": "vault-init",
            "purpose": "ENCRYPT_DECRYPT",
            "rotation_period": "604800s",
            "skip_initial_version_creation": false,
            "timeouts": null,
            "version_template": [
              {
                "algorithm": "GOOGLE_SYMMETRIC_ENCRYPTION",
                "protection_level": "SOFTWARE"
              }
            ]
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDAsInVwZGF0ZSI6MTIwMDAwMDAwMDAwMH0sInNjaGVtYV92ZXJzaW9uIjoiMSJ9",
          "dependencies": [
            "module.vault.module.cluster.google_kms_key_ring.vault"
          ],
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_kms_crypto_key_iam_member",
      "name": "ck-iam",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "condition": [],
            "crypto_key_id": "projects/cloudops-dev-eu-svc-1afa/locations/europe-west1/keyRings/vault/cryptoKeys/vault-init",
            "etag": "BwXaarzVLcM=",
            "id": "projects/cloudops-dev-eu-svc-1afa/locations/europe-west1/keyRings/vault/cryptoKeys/vault-init/roles/cloudkms.cryptoKeyEncrypterDecrypter/serviceAccount:vault-admin@cloudops-dev-eu-svc-1afa.iam.gserviceaccount.com",
            "member": "serviceAccount:vault-admin@cloudops-dev-eu-svc-1afa.iam.gserviceaccount.com",
            "role": "roles/cloudkms.cryptoKeyEncrypterDecrypter"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.google_project_service.service",
            "module.vault.google_service_account.vault-admin",
            "module.vault.module.cluster.google_kms_crypto_key.vault-init",
            "module.vault.module.cluster.google_kms_key_ring.vault"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_kms_key_ring",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "schema_version": 0,
          "attributes": {
            "id": "projects/cloudops-dev-eu-svc-1afa/locations/europe-west1/keyRings/vault",
            "location": "europe-west1",
            "name": "vault",
            "project": "cloudops-dev-eu-svc-1afa",
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "create_before_destroy": true
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_kms_secret_ciphertext",
      "name": "vault-tls-key-encrypted",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "additional_authenticated_data": null,
            "ciphertext": "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",
            "crypto_key": "projects/cloudops-dev-eu-svc-1afa/locations/europe-west1/keyRings/vault/cryptoKeys/vault-init",
            "id": "projects/cloudops-dev-eu-svc-1afa/locations/europe-west1/keyRings/vault/cryptoKeys/vault-init/CiQA7Rztck7kIVp0CqRcMxxFFJVW2WP/HOpYsaKqmuHtz4e0p2ISuQ0AEhkt9HQR5Ke+Atf6zGppdcGpRCu8CtspQ7hNFkknC0ZatMVwSov/yvBQqRi/80rqkdVjEJHFQ7qgpewhHAe5lZ0fK/kgy0bfVhzNxzfMnVwzIx19uqYL7TYFUghgOd5MbdKJmvTR8gF8xAlGGB+5cwOOluaaFzzhzEisI6lDcAZ+2+7POtKN+rIITaWizWmMbI7pjHwPBBc6t9mZUnToIq7X2PUgRsUIrPGr+h4jJeYylFWpGDqhp1z93yFQk484DnlhavNkUUr3ZDpcoAzv/BkPg0qS9+K0EDfDkcPQgrQXh+wpo0h7giphP6k43WeXOtZg0seVlzW0Lp0XnfPFzJ48GONbm7nhFYKJRas3vj4QOgYbYpBiEm5OeTWuAmc5zb4/JlfAMDJlo02PTVg6bIh4SLRy0P65eBHNFoCyaslzdnZkSj/RLMiv3ANnE8mrEMFZ32UYjYZrU3piYPf9whGAD1JUrRWM0t+CNIl+8bbiXNXBmrmjEiK1KXyzireGGPHBa0DfofF0LgNoJZ9x7IE1giWNWpMVB2l/Bpo2VZviAXC9wLY1WLS2+l83HqvyVEe+b3AF6zmHiwC7BQrwfixF4k9drBexAn1OWkLMjnQtPVTAWqNJRIxjgxX8EdjDno4QsiOxK36yGAPJl3umHPJA1Z+IgEQJqy6jk2pRh8cF9BL0iDIVXgu2/lC4Z4bIqmDTPEAZ2m+vSErXulzPl0MfeHISudhvPKbwioE1o1tm06EVe7UApVb6heI4Pyj+pEzzs2m7T6tdSOfPwAqVJmnrSij+IP9sw0w2hZddZo81CW8RAxM1OQoy8KHZyfRaENUybOy6QDQD2Gwfd67gy3p4ayQoDifEK+iMofxOPLMmENFEmGXRbDM+3Z+5enw9jPUPZOVTJdRxyCplfahPypnPtNEmgeVHAga71XmF1lhR8B1ATDWE8GZ47vhgQcxhQ5DRLzWud5+ed2GOSPqoC+Sa/Uz4rlR2l7QDymO877E4iHBfjz4SoWknlnR3RZ9XEPCsrM/MoKIwD1Vwg7ZgV8reQJ6t7zqkbx26BN2B7EEq1rfsfKf2NUxmkWUutvbU+KlFm8vBlJLsMUp9y/poH7DhDe0+rmU1dbMsvBoR2Hh5+tF4dTE5Dh++xHzdCqsbfCZNWldUIACuZTf/dKZwevDhnjRqPY0nL7aO17GR/kbbaHpkYPPFGemAcqPC2LMnvmk8v7O2Q7shYqfmU154I3CowBLghmL7ai31xqCfSZWZzwz/6ATl8mWhon9Ki14GouOLiQU51I586tPsfdIM9XkEdjdK0y3VaqIZLpl08r3do+O2TfCGOOshed9bJ4opT8uGOSnvVfnuJBrslJoHEco7m/lztZplYf5hqldaJvestTM9zvqEFZAoO9KZRW0E3WKl0jVWsphyBr8ha3S6UNIrBaq3fou68rxrtLjM2xr6DsPhMPZENUd6MaEGVE7h5Se5XcyUlOu6aaISYPVw8ZClVi6r7e8MwvrazlC9eGo2DBYlRiYGkP70bHHOuOMogaTrNZhaxgbtLHMI/NboTcCZG87DmKITos91S3fg89tCmlsikDyQmcjlhKhiVYU9xM25TWCX/0zjpqdJIEevEV+p3l/oOxh2zQfdRJma5YmLb1iNhwAIFABzJVkr2WA/ChJt1ToRMFNDvGuAZehd9Jigg3C5aPdowAjrii7nEigZ+9YgVK6YUIZx+godBm5RdMNJ1rAIdAebW4BtXEiykZYUJzdT7KcwwhUM+w/le3miSdW7TvgTFDFcOO0BKqSh05JEUS+L1mHeoLb7Jm4HuJgQtvIY8o8jjnKrK0eRshbKUskkGwyvYGoLxm69R5pltLGP4F9yNKRSnQp3sM+xgSWJPgEPzIA/oewmd6Au8cV6CR3mlwMoXBi474XtNiBkU8qTEnRtbu4SDjndWBul2oPai2wPKvzU3ByruOdfdn05sY5Ht1+YQBKd29Moq+Hm/W25ye7nJVPdmiDK+NiDqJOxiUl2+zu7aWo/7b0ho4tW2gr0JnmFEaki+RUF8/SfcWGVz7LWemO4lub95HbWUT1++YQHR5NFpLYp9l5Gcmfs7siMjyzN54nl3jNJ5ppAxNdCFqzjo4bZD6IOPUsCeyoP7GNEC0MboPy+ZNP9Wlmvg/NZ4pTTDHbLLNVd6y2gfRRUt9Xn5BLjZ8Gl4ZdZkEGkafA3ygu5I4pzKhDj9IWjIB1YGukaH/khYpWi5482M42S4o6WqRJhFkkkdzjcf/X86/A+dsGOOs2GJAQY2/7iOUqXPr1nhQ==",
            "plaintext": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAxgbHO7Qqjc8lJ9vALOtw1i/07I6eLgu8RcqH7UdxFhTP5ely\n+f+ULBI7G+ZB5yx6rptqnuR1hi3M2cvyjPQyRqNSoqOOceVJpIUG1o45VCD/+ZKk\nW2bVWSdPqVFXlaL2osOZCDZOtCnUjssvU7FFPKl8CjQ5lczMvEUIKbasByisjGw+\ncsWakK+z2KXHvI8IaWKbX0xBNe64NJZzVi7G/TCJp2PaTJxTbozIPKIzr7RSFIsz\nEpfTz8xf0rQCZRenQpaB1U9s3IfJO8qbJPT4ufD4zvBSz908jSAGRrMW0nOXym9z\n2wBlEHWTVh+ZyJCTbJjo9jNmuTL+7uBBHDuNeQIDAQABAoIBAE8+kyfvN0A8bs/+\nfm77YNI1qrunbuFaTONY4wAvILAHcBK/UwV8I11nhkPp5uGNySJqi0Y+glFJrrpR\nhSSm7B+caAsxjGVDri6qFUxy6boi4oyLBD6XbjUZKCXHqVb2OeB0iZ7hrKkoPClQ\nYgYJ4H0gDcU/lPO/WwbUUSnwMfNCvFP57C6oRHUYxSBQ3MaonodmutUSdFl18jIt\nW6EnZh1xq/us3AAfiFpCSbw+w+48illezpeFMkjCHvttkmQVj4lJJAoIvcALwjWa\nbMkfjvl65xOOz6XEbcJ2sIa7m3/+Zqb3JSmKfF8zMLSn778ON5SaKTguPU3ViI3i\ng1N+TwECgYEAyetNeea9X7waokM6JYItma3+PliZnflr+CgrMuZkTvbDIX+qrP9x\nNbOIztKuavwQoXi5pWiXej1NZHrVcVtiIzB4qcy5RADHic2rN8bbonHfq2mIwCHx\nY5MkINfpEc6kzWAUK9u6gIagEnuGG9nPJ4sbzGhcPE/+KTqG6mO+HIkCgYEA+xCS\nhAnj2So8TBUUM2ch3/aDhOmstVqrmEedqTWkfCfaJ0S0yZwBWkWtqjSXk7UjV68d\neihkj7V6AY5LBDSFyW0k1u3GPvNHz29nqDVuFW/RG0buTmc1qsv7+/KuvoXKUE7F\n6ZlAVGLzAL9+9O7LgiXrAY0Lm8IuqW7RjBNuDXECgYA6StwLHTn+sWdfANmAipxv\niXOkvB9dI+yvr6kJAMpkoYij2x+C4hvkzPfp/Zis+igy9Y9i2VchyyDUqUGFgERM\ntGmhW6EAqNjyR5XufFJcC1PvQIBiN2pgvNHpSWvX4DhjsiEgqEanZDZCH7cPw0my\nuM5FrLs0DkPp0yOv9yujQQKBgQCmXxwIfZlMno1oiYtiaNRs2qna2RLG9vfBKKwU\npmSCldIdtYzsEQJgdM4ZfVJ44k8yWuv4uG2zQbpA769McRW7HiWMe/KkYojSsGuL\nbySs9fUm00E2GXTZ4uTv16juvjAMObczDogvo4aOl1elLd0UONZbp8DqjapoQvR/\nk5yZMQKBgQCwd273yx8PxxSB8w4Jy7W3ACfGsC9OVny33TimB12zQdd3X39Pfo1C\nyiGBKm4dtT4pUkMpsTZ5IxGFYoQ20Lech/gv3OJ9D/Yo46yQqgXeSpNWprlydtrB\nqr7UMBgZCqaW/YpmtuO5eyFXeguHsXmfXywmxks1cpqi+SBrxBDxQg==\n-----END RSA PRIVATE KEY-----\n",
            "timeouts": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "plaintext"
              }
            ]
          ],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoxMjAwMDAwMDAwMDAwLCJkZWxldGUiOjEyMDAwMDAwMDAwMDB9fQ==",
          "dependencies": [
            "module.vault.module.cluster.google_kms_crypto_key.vault-init",
            "module.vault.module.cluster.google_kms_key_ring.vault",
            "module.vault.module.cluster.tls_private_key.vault-server"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_project_iam_member",
      "name": "project-iam",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": "roles/logging.logWriter",
          "schema_version": 0,
          "attributes": {
            "condition": [],
            "etag": "BwXaar1pF/c=",
            "id": "cloudops-dev-eu-svc-1afa/roles/logging.logWriter/serviceAccount:vault-admin@cloudops-dev-eu-svc-1afa.iam.gserviceaccount.com",
            "member": "serviceAccount:vault-admin@cloudops-dev-eu-svc-1afa.iam.gserviceaccount.com",
            "project": "cloudops-dev-eu-svc-1afa",
            "role": "roles/logging.logWriter"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.google_project_service.service",
            "module.vault.google_service_account.vault-admin"
          ]
        },
        {
          "index_key": "roles/monitoring.metricWriter",
          "schema_version": 0,
          "attributes": {
            "condition": [],
            "etag": "BwXaar1pF/c=",
            "id": "cloudops-dev-eu-svc-1afa/roles/monitoring.metricWriter/serviceAccount:vault-admin@cloudops-dev-eu-svc-1afa.iam.gserviceaccount.com",
            "member": "serviceAccount:vault-admin@cloudops-dev-eu-svc-1afa.iam.gserviceaccount.com",
            "project": "cloudops-dev-eu-svc-1afa",
            "role": "roles/monitoring.metricWriter"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.google_project_service.service",
            "module.vault.google_service_account.vault-admin"
          ]
        },
        {
          "index_key": "roles/monitoring.viewer",
          "schema_version": 0,
          "attributes": {
            "condition": [],
            "etag": "BwXaar1pF/c=",
            "id": "cloudops-dev-eu-svc-1afa/roles/monitoring.viewer/serviceAccount:vault-admin@cloudops-dev-eu-svc-1afa.iam.gserviceaccount.com",
            "member": "serviceAccount:vault-admin@cloudops-dev-eu-svc-1afa.iam.gserviceaccount.com",
            "project": "cloudops-dev-eu-svc-1afa",
            "role": "roles/monitoring.viewer"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.google_project_service.service",
            "module.vault.google_service_account.vault-admin"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_storage_bucket_iam_member",
      "name": "vault",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": "roles/storage.legacyBucketReader",
          "schema_version": 0,
          "attributes": {
            "bucket": "b/cloudops-dev-eu-svc-1afa-vault-data",
            "condition": [],
            "etag": "CAM=",
            "id": "b/cloudops-dev-eu-svc-1afa-vault-data/roles/storage.legacyBucketReader/serviceAccount:vault-admin@cloudops-dev-eu-svc-1afa.iam.gserviceaccount.com",
            "member": "serviceAccount:vault-admin@cloudops-dev-eu-svc-1afa.iam.gserviceaccount.com",
            "role": "roles/storage.legacyBucketReader"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.google_project_service.service",
            "module.vault.google_service_account.vault-admin",
            "module.vault.google_storage_bucket.vault"
          ]
        },
        {
          "index_key": "roles/storage.objectAdmin",
          "schema_version": 0,
          "attributes": {
            "bucket": "b/cloudops-dev-eu-svc-1afa-vault-data",
            "condition": [],
            "etag": "CAM=",
            "id": "b/cloudops-dev-eu-svc-1afa-vault-data/roles/storage.objectAdmin/serviceAccount:vault-admin@cloudops-dev-eu-svc-1afa.iam.gserviceaccount.com",
            "member": "serviceAccount:vault-admin@cloudops-dev-eu-svc-1afa.iam.gserviceaccount.com",
            "role": "roles/storage.objectAdmin"
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.google_project_service.service",
            "module.vault.google_service_account.vault-admin",
            "module.vault.google_storage_bucket.vault"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_storage_bucket_object",
      "name": "vault-ca-cert",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "bucket": "cloudops-dev-eu-svc-1afa-vault-data",
            "cache_control": "",
            "content": "-----BEGIN CERTIFICATE-----\nMIIEVjCCAz6gAwIBAgIQalUmXQP+OFfRcN3H5NcF/DANBgkqhkiG9w0BAQsFADCB\nxDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMRUwEwYDVQQHEwxUaGUgSW50cmFu\nZXQxGzAZBgNVBAkTEjEyMyBFeGFtcGxlIFN0cmVldDETMBEGA1UEERMKOTU1NTkt\nMTIyNzEVMBMGA1UEChMMRXhhbXBsZSwgSW5jMSwwKgYDVQQLEyNEZXBhcnRtZW50\nIG9mIENlcnRpZmljYXRlIEF1dGhvcml0eTEaMBgGA1UEAxMRRXhhbXBsZSBJbmMu\nIFJvb3QwHhcNMjIwMzE3MTQyMDQ1WhcNMjUwMzE2MTQyMDQ1WjCBxDELMAkGA1UE\nBhMCVVMxCzAJBgNVBAgTAkNBMRUwEwYDVQQHEwxUaGUgSW50cmFuZXQxGzAZBgNV\nBAkTEjEyMyBFeGFtcGxlIFN0cmVldDETMBEGA1UEERMKOTU1NTktMTIyNzEVMBMG\nA1UEChMMRXhhbXBsZSwgSW5jMSwwKgYDVQQLEyNEZXBhcnRtZW50IG9mIENlcnRp\nZmljYXRlIEF1dGhvcml0eTEaMBgGA1UEAxMRRXhhbXBsZSBJbmMuIFJvb3QwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCuQ8gd/RH3qZC5NMSFTP3R0yqX\ncpn9ToWVPJtMHsVjffKMjGlD1BpwcOJaICwQG8jw3hTxh7zKliuNTCM5mdY3/+Ub\ndSQDU3uX8S88bt764fURWwk2uzswQCQHCmxo5A5C+glzTntygV8g7hQLv5qU2io6\nbuNxlhCaF5UK6SBetGkCReuCt83KvRjqC3f3O11EnurviUH7GHqqj7cKFnF99YID\nhhI5ftLAEvLTCmxfu5S+lubXQyBCcehGq8ffG0UJxkPUJ4T/ChtJ47edipoRgU+K\nh3BrBrQydOK5YtrdWPhEJESdjSMyxUcP5usxJdcKKOYQvCl0hmdQkQPFW3itAgMB\nAAGjQjBAMA4GA1UdDwEB/wQEAwICBDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW\nBBTLuQCyF1Y4sRnEcisejWVZACarmDANBgkqhkiG9w0BAQsFAAOCAQEAPsHQDWd7\nycQ4T1epbEJAd/2d/Wg9yOipBKJsPIKFFij4A6Nz6ZFp/AL09M6Vt73ZG6+ytE2+\nJ66APePGr58I9Rkq6paK02Nzuq456hUHmgQjdLuJDWkAQ7kWsi0b9UwuK6QgAD1O\nBwQYq9SUke5BfdUa2T7ODCMouhJh2xbPo6DCCIDcErSX6FqGs2uRFbjK+ln5sFq7\nc3KpPD9C1qHOG0UNvCTwbb8KZtQADgqUuinNQFY+fX5KMQwu1ES0+GtEind/HL/O\nNomfSydxIKOmhpErXKqu3w/7syafaZL0NNf1A7NY/FDkGNV7V84cKpeQbYZeeTyR\n6pm6MC5T2OjeiA==\n-----END CERTIFICATE-----\n",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "text/plain; charset=utf-8",
            "crc32c": "WI28WA==",
            "customer_encryption": [],
            "detect_md5hash": "PAZrEBmjpV9DWsbIdUwi8g==",
            "event_based_hold": false,
            "id": "cloudops-dev-eu-svc-1afa-vault-data-ca.crt",
            "kms_key_name": "",
            "md5hash": "PAZrEBmjpV9DWsbIdUwi8g==",
            "media_link": "https://storage.googleapis.com/download/storage/v1/b/cloudops-dev-eu-svc-1afa-vault-data/o/ca.crt?generation=1647526852191253\u0026alt=media",
            "metadata": null,
            "name": "ca.crt",
            "output_name": "ca.crt",
            "self_link": "https://www.googleapis.com/storage/v1/b/cloudops-dev-eu-svc-1afa-vault-data/o/ca.crt",
            "source": null,
            "storage_class": "MULTI_REGIONAL",
            "temporary_hold": false,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_project_service.service",
            "module.vault.google_storage_bucket.vault",
            "module.vault.module.cluster.tls_private_key.root",
            "module.vault.module.cluster.tls_self_signed_cert.root"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_storage_bucket_object",
      "name": "vault-private-key",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "bucket": "cloudops-dev-eu-svc-1afa-vault-data",
            "cache_control": "",
            "content": "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",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "text/plain; charset=utf-8",
            "crc32c": "xNfX9g==",
            "customer_encryption": [],
            "detect_md5hash": "ha77RYOMiDPBIxmk+/9CMg==",
            "event_based_hold": false,
            "id": "cloudops-dev-eu-svc-1afa-vault-data-vault.key.enc",
            "kms_key_name": "",
            "md5hash": "ha77RYOMiDPBIxmk+/9CMg==",
            "media_link": "https://storage.googleapis.com/download/storage/v1/b/cloudops-dev-eu-svc-1afa-vault-data/o/vault.key.enc?generation=1647526852189410\u0026alt=media",
            "metadata": null,
            "name": "vault.key.enc",
            "output_name": "vault.key.enc",
            "self_link": "https://www.googleapis.com/storage/v1/b/cloudops-dev-eu-svc-1afa-vault-data/o/vault.key.enc",
            "source": null,
            "storage_class": "MULTI_REGIONAL",
            "temporary_hold": false,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_project_service.service",
            "module.vault.google_storage_bucket.vault",
            "module.vault.module.cluster.google_kms_crypto_key.vault-init",
            "module.vault.module.cluster.google_kms_key_ring.vault",
            "module.vault.module.cluster.google_kms_secret_ciphertext.vault-tls-key-encrypted",
            "module.vault.module.cluster.tls_private_key.vault-server"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "google_storage_bucket_object",
      "name": "vault-server-cert",
      "provider": "provider[\"registry.terraform.io/hashicorp/google\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "bucket": "cloudops-dev-eu-svc-1afa-vault-data",
            "cache_control": "",
            "content": "-----BEGIN CERTIFICATE-----\nMIIEFDCCAvygAwIBAgIRAOHmwqWC4CSU4MUL1qE9RlQwDQYJKoZIhvcNAQELBQAw\ngcQxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJDQTEVMBMGA1UEBxMMVGhlIEludHJh\nbmV0MRswGQYDVQQJExIxMjMgRXhhbXBsZSBTdHJlZXQxEzARBgNVBBETCjk1NTU5\nLTEyMjcxFTATBgNVBAoTDEV4YW1wbGUsIEluYzEsMCoGA1UECxMjRGVwYXJ0bWVu\ndCBvZiBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxGjAYBgNVBAMTEUV4YW1wbGUgSW5j\nLiBSb290MB4XDTIyMDMxNzE0MjEyMVoXDTI0MDMxNjE0MjEyMVowVDEVMBMGA1UE\nChMMRXhhbXBsZSwgSW5jMR8wHQYDVQQLExZJVCBTZWN1cml0eSBPcGVyYXRpb25z\nMRowGAYDVQQDExF2YXVsdC5leGFtcGxlLm5ldDCCASIwDQYJKoZIhvcNAQEBBQAD\nggEPADCCAQoCggEBAMYGxzu0Ko3PJSfbwCzrcNYv9OyOni4LvEXKh+1HcRYUz+Xp\ncvn/lCwSOxvmQecseq6bap7kdYYtzNnL8oz0MkajUqKjjnHlSaSFBtaOOVQg//mS\npFtm1VknT6lRV5Wi9qLDmQg2TrQp1I7LL1OxRTypfAo0OZXMzLxFCCm2rAcorIxs\nPnLFmpCvs9ilx7yPCGlim19MQTXuuDSWc1Yuxv0wiadj2kycU26MyDyiM6+0UhSL\nMxKX08/MX9K0AmUXp0KWgdVPbNyHyTvKmyT0+Lnw+M7wUs/dPI0gBkazFtJzl8pv\nc9sAZRB1k1YfmciQk2yY6PYzZrky/u7gQRw7jXkCAwEAAaNwMG4wEwYDVR0lBAww\nCgYIKwYBBQUHAwEwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBTLuQCyF1Y4sRnE\ncisejWVZACarmDAoBgNVHREEITAfghF2YXVsdC5leGFtcGxlLm5ldIcEI73BkocE\nfwAAATANBgkqhkiG9w0BAQsFAAOCAQEATUhTEo5ip4x6kXbKPT+WxZMA2vcvji3c\nnA4kKFSBfYytdJFuHVQ9hzPZmQd46qvyykDz2NmP90+ejOFfX3Tn+/EGVed60EQj\ny3Br9/SfAhXbpCZYV2wL337K8wkgp3CJSm8iO9pvc0YbdGge+sKav7t3uWbH6eeC\nkIMLmV7yOHKS7xFxLZYKW3W8A3XZcnWzQf5jAqZypDNQtQKlxVLR46qjgWPJ/C11\nZVjBmRPx6TJb4/0q3rhmhZBIbpRFni2wALm1quXj61O+zNteB3gOvS0ZoKb8JySh\nj+isgfYgGvPjjHW/9fXKlGkQcuN0rV9YEnr90XVpO8i7fol3cKkYVA==\n-----END CERTIFICATE-----\n",
            "content_disposition": "",
            "content_encoding": "",
            "content_language": "",
            "content_type": "text/plain; charset=utf-8",
            "crc32c": "D1kgEQ==",
            "customer_encryption": [],
            "detect_md5hash": "xTIlOPmnQjYvb3kVrhN/3A==",
            "event_based_hold": false,
            "id": "cloudops-dev-eu-svc-1afa-vault-data-vault.crt",
            "kms_key_name": "",
            "md5hash": "xTIlOPmnQjYvb3kVrhN/3A==",
            "media_link": "https://storage.googleapis.com/download/storage/v1/b/cloudops-dev-eu-svc-1afa-vault-data/o/vault.crt?generation=1647526881402328\u0026alt=media",
            "metadata": null,
            "name": "vault.crt",
            "output_name": "vault.crt",
            "self_link": "https://www.googleapis.com/storage/v1/b/cloudops-dev-eu-svc-1afa-vault-data/o/vault.crt",
            "source": null,
            "storage_class": "MULTI_REGIONAL",
            "temporary_hold": false,
            "timeouts": null
          },
          "sensitive_attributes": [],
          "private": "eyJlMmJmYjczMC1lY2FhLTExZTYtOGY4OC0zNDM2M2JjN2M0YzAiOnsiY3JlYXRlIjoyNDAwMDAwMDAwMDAsImRlbGV0ZSI6MjQwMDAwMDAwMDAwLCJ1cGRhdGUiOjI0MDAwMDAwMDAwMH19",
          "dependencies": [
            "module.vault.google_compute_address.vault",
            "module.vault.google_compute_address.vault_ilb",
            "module.vault.google_project_service.service",
            "module.vault.google_storage_bucket.vault",
            "module.vault.module.cluster.google_compute_forwarding_rule.external",
            "module.vault.module.cluster.google_compute_http_health_check.vault",
            "module.vault.module.cluster.google_compute_target_pool.vault",
            "module.vault.module.cluster.tls_cert_request.vault-server",
            "module.vault.module.cluster.tls_locally_signed_cert.vault-server",
            "module.vault.module.cluster.tls_private_key.root",
            "module.vault.module.cluster.tls_private_key.vault-server",
            "module.vault.module.cluster.tls_self_signed_cert.root"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "local_file",
      "name": "root",
      "provider": "provider[\"registry.terraform.io/hashicorp/local\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "content": "-----BEGIN CERTIFICATE-----\nMIIEVjCCAz6gAwIBAgIQalUmXQP+OFfRcN3H5NcF/DANBgkqhkiG9w0BAQsFADCB\nxDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMRUwEwYDVQQHEwxUaGUgSW50cmFu\nZXQxGzAZBgNVBAkTEjEyMyBFeGFtcGxlIFN0cmVldDETMBEGA1UEERMKOTU1NTkt\nMTIyNzEVMBMGA1UEChMMRXhhbXBsZSwgSW5jMSwwKgYDVQQLEyNEZXBhcnRtZW50\nIG9mIENlcnRpZmljYXRlIEF1dGhvcml0eTEaMBgGA1UEAxMRRXhhbXBsZSBJbmMu\nIFJvb3QwHhcNMjIwMzE3MTQyMDQ1WhcNMjUwMzE2MTQyMDQ1WjCBxDELMAkGA1UE\nBhMCVVMxCzAJBgNVBAgTAkNBMRUwEwYDVQQHEwxUaGUgSW50cmFuZXQxGzAZBgNV\nBAkTEjEyMyBFeGFtcGxlIFN0cmVldDETMBEGA1UEERMKOTU1NTktMTIyNzEVMBMG\nA1UEChMMRXhhbXBsZSwgSW5jMSwwKgYDVQQLEyNEZXBhcnRtZW50IG9mIENlcnRp\nZmljYXRlIEF1dGhvcml0eTEaMBgGA1UEAxMRRXhhbXBsZSBJbmMuIFJvb3QwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCuQ8gd/RH3qZC5NMSFTP3R0yqX\ncpn9ToWVPJtMHsVjffKMjGlD1BpwcOJaICwQG8jw3hTxh7zKliuNTCM5mdY3/+Ub\ndSQDU3uX8S88bt764fURWwk2uzswQCQHCmxo5A5C+glzTntygV8g7hQLv5qU2io6\nbuNxlhCaF5UK6SBetGkCReuCt83KvRjqC3f3O11EnurviUH7GHqqj7cKFnF99YID\nhhI5ftLAEvLTCmxfu5S+lubXQyBCcehGq8ffG0UJxkPUJ4T/ChtJ47edipoRgU+K\nh3BrBrQydOK5YtrdWPhEJESdjSMyxUcP5usxJdcKKOYQvCl0hmdQkQPFW3itAgMB\nAAGjQjBAMA4GA1UdDwEB/wQEAwICBDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW\nBBTLuQCyF1Y4sRnEcisejWVZACarmDANBgkqhkiG9w0BAQsFAAOCAQEAPsHQDWd7\nycQ4T1epbEJAd/2d/Wg9yOipBKJsPIKFFij4A6Nz6ZFp/AL09M6Vt73ZG6+ytE2+\nJ66APePGr58I9Rkq6paK02Nzuq456hUHmgQjdLuJDWkAQ7kWsi0b9UwuK6QgAD1O\nBwQYq9SUke5BfdUa2T7ODCMouhJh2xbPo6DCCIDcErSX6FqGs2uRFbjK+ln5sFq7\nc3KpPD9C1qHOG0UNvCTwbb8KZtQADgqUuinNQFY+fX5KMQwu1ES0+GtEind/HL/O\nNomfSydxIKOmhpErXKqu3w/7syafaZL0NNf1A7NY/FDkGNV7V84cKpeQbYZeeTyR\n6pm6MC5T2OjeiA==\n-----END CERTIFICATE-----\n",
            "content_base64": null,
            "directory_permission": "0777",
            "file_permission": "0777",
            "filename": "ca.crt",
            "id": "1e9486b6ce4347fa8c846b124f6ef283559dc3ac",
            "sensitive_content": null,
            "source": null
          },
          "sensitive_attributes": [],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.module.cluster.tls_private_key.root",
            "module.vault.module.cluster.tls_self_signed_cert.root"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "tls_cert_request",
      "name": "vault-server",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "cert_request_pem": "-----BEGIN CERTIFICATE REQUEST-----\nMIIC1DCCAbwCAQAwVDEVMBMGA1UEChMMRXhhbXBsZSwgSW5jMR8wHQYDVQQLExZJ\nVCBTZWN1cml0eSBPcGVyYXRpb25zMRowGAYDVQQDExF2YXVsdC5leGFtcGxlLm5l\ndDCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAMYGxzu0Ko3PJSfbwCzr\ncNYv9OyOni4LvEXKh+1HcRYUz+Xpcvn/lCwSOxvmQecseq6bap7kdYYtzNnL8oz0\nMkajUqKjjnHlSaSFBtaOOVQg//mSpFtm1VknT6lRV5Wi9qLDmQg2TrQp1I7LL1Ox\nRTypfAo0OZXMzLxFCCm2rAcorIxsPnLFmpCvs9ilx7yPCGlim19MQTXuuDSWc1Yu\nxv0wiadj2kycU26MyDyiM6+0UhSLMxKX08/MX9K0AmUXp0KWgdVPbNyHyTvKmyT0\n+Lnw+M7wUs/dPI0gBkazFtJzl8pvc9sAZRB1k1YfmciQk2yY6PYzZrky/u7gQRw7\njXkCAwEAAaA7MDkGCSqGSIb3DQEJDjEsMCowKAYDVR0RBCEwH4IRdmF1bHQuZXhh\nbXBsZS5uZXSHBCO9wZKHBH8AAAEwDQYJKoZIhvcNAQELBQADggEBALybs8v9XyIy\nXcngXKDRpdDzuWOYJYvMlitqMjTPdo3mupfLkcNej5JzmKHU74gD20pDygYa7LGj\nUReBg3uA/VGG6NktEPtc85VEe02kD8tAtnxdJIlxaOvGozhjkWFcziwE+65tm/TR\n/D/Bofre2fM/Pq/LOieEuYQRp9gjgoSlgxfPrVlIw83S1wqlfMTsLHhVgi8ZnWKR\nuE28atgcAsdP9uzq3qfe+r2Ru2LNR63SsjEZnBO/dj0pMohX3iFXqzb8Bp+pLh3F\nTh46YOakr87HrTQU8b7o+AW2SPas6atVi514mCyHcR3D+e3e9wsUFqvSCNPT7I/e\nT46K1KbTcBE=\n-----END CERTIFICATE REQUEST-----\n",
            "dns_names": [
              "vault.example.net"
            ],
            "id": "1b5abd08291e2a6f7e0555ee640792bbcb3c95af",
            "ip_addresses": [
              "35.189.193.146",
              "127.0.0.1"
            ],
            "key_algorithm": "RSA",
            "private_key_pem": "8ada8c76f2f968e4d10d8853ef353d719380a5b8",
            "subject": [
              {
                "common_name": "vault.example.net",
                "country": "",
                "locality": "",
                "organization": "Example, Inc",
                "organizational_unit": "IT Security Operations",
                "postal_code": "",
                "province": "",
                "serial_number": "",
                "street_address": null
              }
            ],
            "uris": null
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.google_compute_address.vault",
            "module.vault.google_compute_address.vault_ilb",
            "module.vault.google_project_service.service",
            "module.vault.module.cluster.google_compute_forwarding_rule.external",
            "module.vault.module.cluster.google_compute_http_health_check.vault",
            "module.vault.module.cluster.google_compute_target_pool.vault",
            "module.vault.module.cluster.tls_private_key.vault-server"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "tls_locally_signed_cert",
      "name": "vault-server",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "server_auth"
            ],
            "ca_cert_pem": "bf2ebb72e14fd8a7d80f4c671ca660a2658ca23a",
            "ca_key_algorithm": "RSA",
            "ca_private_key_pem": "c9fe84d47ceeafa431e3c1bb8796639f2dafb407",
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEFDCCAvygAwIBAgIRAOHmwqWC4CSU4MUL1qE9RlQwDQYJKoZIhvcNAQELBQAw\ngcQxCzAJBgNVBAYTAlVTMQswCQYDVQQIEwJDQTEVMBMGA1UEBxMMVGhlIEludHJh\nbmV0MRswGQYDVQQJExIxMjMgRXhhbXBsZSBTdHJlZXQxEzARBgNVBBETCjk1NTU5\nLTEyMjcxFTATBgNVBAoTDEV4YW1wbGUsIEluYzEsMCoGA1UECxMjRGVwYXJ0bWVu\ndCBvZiBDZXJ0aWZpY2F0ZSBBdXRob3JpdHkxGjAYBgNVBAMTEUV4YW1wbGUgSW5j\nLiBSb290MB4XDTIyMDMxNzE0MjEyMVoXDTI0MDMxNjE0MjEyMVowVDEVMBMGA1UE\nChMMRXhhbXBsZSwgSW5jMR8wHQYDVQQLExZJVCBTZWN1cml0eSBPcGVyYXRpb25z\nMRowGAYDVQQDExF2YXVsdC5leGFtcGxlLm5ldDCCASIwDQYJKoZIhvcNAQEBBQAD\nggEPADCCAQoCggEBAMYGxzu0Ko3PJSfbwCzrcNYv9OyOni4LvEXKh+1HcRYUz+Xp\ncvn/lCwSOxvmQecseq6bap7kdYYtzNnL8oz0MkajUqKjjnHlSaSFBtaOOVQg//mS\npFtm1VknT6lRV5Wi9qLDmQg2TrQp1I7LL1OxRTypfAo0OZXMzLxFCCm2rAcorIxs\nPnLFmpCvs9ilx7yPCGlim19MQTXuuDSWc1Yuxv0wiadj2kycU26MyDyiM6+0UhSL\nMxKX08/MX9K0AmUXp0KWgdVPbNyHyTvKmyT0+Lnw+M7wUs/dPI0gBkazFtJzl8pv\nc9sAZRB1k1YfmciQk2yY6PYzZrky/u7gQRw7jXkCAwEAAaNwMG4wEwYDVR0lBAww\nCgYIKwYBBQUHAwEwDAYDVR0TAQH/BAIwADAfBgNVHSMEGDAWgBTLuQCyF1Y4sRnE\ncisejWVZACarmDAoBgNVHREEITAfghF2YXVsdC5leGFtcGxlLm5ldIcEI73BkocE\nfwAAATANBgkqhkiG9w0BAQsFAAOCAQEATUhTEo5ip4x6kXbKPT+WxZMA2vcvji3c\nnA4kKFSBfYytdJFuHVQ9hzPZmQd46qvyykDz2NmP90+ejOFfX3Tn+/EGVed60EQj\ny3Br9/SfAhXbpCZYV2wL337K8wkgp3CJSm8iO9pvc0YbdGge+sKav7t3uWbH6eeC\nkIMLmV7yOHKS7xFxLZYKW3W8A3XZcnWzQf5jAqZypDNQtQKlxVLR46qjgWPJ/C11\nZVjBmRPx6TJb4/0q3rhmhZBIbpRFni2wALm1quXj61O+zNteB3gOvS0ZoKb8JySh\nj+isgfYgGvPjjHW/9fXKlGkQcuN0rV9YEnr90XVpO8i7fol3cKkYVA==\n-----END CERTIFICATE-----\n",
            "cert_request_pem": "dffb3e800e95c35c8e702df2fc4e4ba7d1f237a5",
            "early_renewal_hours": 8760,
            "id": "300274475229683028447472958157260408404",
            "is_ca_certificate": null,
            "ready_for_renewal": false,
            "set_subject_key_id": null,
            "validity_end_time": "2024-03-16T17:21:21.02515+03:00",
            "validity_period_hours": 17520,
            "validity_start_time": "2022-03-17T17:21:21.02515+03:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "ca_private_key_pem"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.google_compute_address.vault",
            "module.vault.google_compute_address.vault_ilb",
            "module.vault.google_project_service.service",
            "module.vault.module.cluster.google_compute_forwarding_rule.external",
            "module.vault.module.cluster.google_compute_http_health_check.vault",
            "module.vault.module.cluster.google_compute_target_pool.vault",
            "module.vault.module.cluster.tls_cert_request.vault-server",
            "module.vault.module.cluster.tls_private_key.root",
            "module.vault.module.cluster.tls_private_key.vault-server",
            "module.vault.module.cluster.tls_self_signed_cert.root"
          ]
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "root",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "cca13530c43a49f41e018e1686b611f013f80754",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEowIBAAKCAQEArkPIHf0R96mQuTTEhUz90dMql3KZ/U6FlTybTB7FY33yjIxp\nQ9QacHDiWiAsEBvI8N4U8Ye8ypYrjUwjOZnWN//lG3UkA1N7l/EvPG7e+uH1EVsJ\nNrs7MEAkBwpsaOQOQvoJc057coFfIO4UC7+alNoqOm7jcZYQmheVCukgXrRpAkXr\ngrfNyr0Y6gt39ztdRJ7q74lB+xh6qo+3ChZxffWCA4YSOX7SwBLy0wpsX7uUvpbm\n10MgQnHoRqvH3xtFCcZD1CeE/wobSeO3nYqaEYFPiodwawa0MnTiuWLa3Vj4RCRE\nnY0jMsVHD+brMSXXCijmELwpdIZnUJEDxVt4rQIDAQABAoIBADhBz4fG3BcM2ZjA\nrTSvXz1uo1BTAd1hjQRZlXTkdiqhTT0MUys/fO2Rs7EOs8rbfWos96vlexAXnKW3\nz6NXw20+ohLUJTUhrUOm6+3hiQCLE5dvwTC3DuuLuVXAirDt9qCuoYBk9LtJgpFZ\n6oTEbT3ilEFa7PgNTvy/4jCsg/OuV2QEnHHwdzCCKLjweXEow52DCAzSL3u1HbRs\nsrjmj1lzKkPDDNjgZV2PI2Hi/9RVxkKDUXVLzghIutSiNgqFtJ9K/O5faJ3xahyH\ntDzjW6WDgyRbMhep1RN8LkX9qph1VrFLS67ah2ci8Qnmx7y6TGalWrj5W5D47EgS\nbWdIjuECgYEAwmD4VWcC9NK+K2TiaeMlYs5jhvBUwmI9ZJPGMPTkMMrb+Q89Oins\nH8wosOwqgR2+DF2Af6K/t1ECncfl1QW9jvMSTrEryuw6Muy2Rsw4lBcf1cpdXyhU\nWHjVDgjGXnuvBErFGefo3NtsBaoWn0vzZpHJ85C4FCe4GDfKlXYI2fkCgYEA5YJv\nmAmeNPQPIH8PQM5gC5eVewNN2ztW8vr24os6gH2iunfnmdTTFI1TNrJqn/eqLj4l\n1L03UjGqG5dV9G/6XlCw4aa5YfHgIhTrH5Is4ca/gkt61F/948YYqhucyAFM13Jc\nJGEh9FsF3Cu/dSZztIupSQkPSxrTsL5zuLdiIVUCgYAjTDKsZ4ls5fwsqyRGcD4w\nxCPktC3gIrDdW8xoxX/OsHfjsXW/4y8C0zMsdaZ+TeVeH3ifNPG1m1trRYqh9Wnn\n1JIlghzeu6kR6FRtZNZ9Zfmc/COajRtL+Z1O8B79t14f3GgQfUGXIa1rFekHwmYP\n4TeYKFaVKmVO2IrMO2P+GQKBgDN3FF8biQaG0/2NgHYf0RnIXBTBoOvQWqcR79rN\nLckyYxM9YAn21358UnSpfY9xkg/cj88svwMHcAXP4c52bcZIgeGX6Wo1OvVpi3AA\n71+RmdA17M1C2UQCX/WFS5rt77VAR7lArsSExMOia8RxYvDRgJyIE43b7ixsCLcb\nKD4hAoGBAKYu7rhRfSbJ2waAZjjgIPP3cdLGtCXIWu/7muhcolm2O1DiF3/xAJsd\nWa++UvInUXhFC8TfLTAv0AEl78s0X1G7//AVJQJfvf2hznKYYrPf2cFbxCL7TAn5\n0c8775jy/6/aHHjWd1gdOdIvZs0gBynP//jmewE+bhJ9TbNrtOFr\n-----END RSA PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "d6:96:c9:05:4f:1e:70:2a:1e:1a:48:00:37:87:80:12",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCuQ8gd/RH3qZC5NMSFTP3R0yqXcpn9ToWVPJtMHsVjffKMjGlD1BpwcOJaICwQG8jw3hTxh7zKliuNTCM5mdY3/+UbdSQDU3uX8S88bt764fURWwk2uzswQCQHCmxo5A5C+glzTntygV8g7hQLv5qU2io6buNxlhCaF5UK6SBetGkCReuCt83KvRjqC3f3O11EnurviUH7GHqqj7cKFnF99YIDhhI5ftLAEvLTCmxfu5S+lubXQyBCcehGq8ffG0UJxkPUJ4T/ChtJ47edipoRgU+Kh3BrBrQydOK5YtrdWPhEJESdjSMyxUcP5usxJdcKKOYQvCl0hmdQkQPFW3it\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEArkPIHf0R96mQuTTEhUz9\n0dMql3KZ/U6FlTybTB7FY33yjIxpQ9QacHDiWiAsEBvI8N4U8Ye8ypYrjUwjOZnW\nN//lG3UkA1N7l/EvPG7e+uH1EVsJNrs7MEAkBwpsaOQOQvoJc057coFfIO4UC7+a\nlNoqOm7jcZYQmheVCukgXrRpAkXrgrfNyr0Y6gt39ztdRJ7q74lB+xh6qo+3ChZx\nffWCA4YSOX7SwBLy0wpsX7uUvpbm10MgQnHoRqvH3xtFCcZD1CeE/wobSeO3nYqa\nEYFPiodwawa0MnTiuWLa3Vj4RCREnY0jMsVHD+brMSXXCijmELwpdIZnUJEDxVt4\nrQIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "tls_private_key",
      "name": "vault-server",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "algorithm": "RSA",
            "ecdsa_curve": "P224",
            "id": "2692a856662b419fb8d815bc6b7c8872fa5722ff",
            "private_key_pem": "-----BEGIN RSA PRIVATE KEY-----\nMIIEpAIBAAKCAQEAxgbHO7Qqjc8lJ9vALOtw1i/07I6eLgu8RcqH7UdxFhTP5ely\n+f+ULBI7G+ZB5yx6rptqnuR1hi3M2cvyjPQyRqNSoqOOceVJpIUG1o45VCD/+ZKk\nW2bVWSdPqVFXlaL2osOZCDZOtCnUjssvU7FFPKl8CjQ5lczMvEUIKbasByisjGw+\ncsWakK+z2KXHvI8IaWKbX0xBNe64NJZzVi7G/TCJp2PaTJxTbozIPKIzr7RSFIsz\nEpfTz8xf0rQCZRenQpaB1U9s3IfJO8qbJPT4ufD4zvBSz908jSAGRrMW0nOXym9z\n2wBlEHWTVh+ZyJCTbJjo9jNmuTL+7uBBHDuNeQIDAQABAoIBAE8+kyfvN0A8bs/+\nfm77YNI1qrunbuFaTONY4wAvILAHcBK/UwV8I11nhkPp5uGNySJqi0Y+glFJrrpR\nhSSm7B+caAsxjGVDri6qFUxy6boi4oyLBD6XbjUZKCXHqVb2OeB0iZ7hrKkoPClQ\nYgYJ4H0gDcU/lPO/WwbUUSnwMfNCvFP57C6oRHUYxSBQ3MaonodmutUSdFl18jIt\nW6EnZh1xq/us3AAfiFpCSbw+w+48illezpeFMkjCHvttkmQVj4lJJAoIvcALwjWa\nbMkfjvl65xOOz6XEbcJ2sIa7m3/+Zqb3JSmKfF8zMLSn778ON5SaKTguPU3ViI3i\ng1N+TwECgYEAyetNeea9X7waokM6JYItma3+PliZnflr+CgrMuZkTvbDIX+qrP9x\nNbOIztKuavwQoXi5pWiXej1NZHrVcVtiIzB4qcy5RADHic2rN8bbonHfq2mIwCHx\nY5MkINfpEc6kzWAUK9u6gIagEnuGG9nPJ4sbzGhcPE/+KTqG6mO+HIkCgYEA+xCS\nhAnj2So8TBUUM2ch3/aDhOmstVqrmEedqTWkfCfaJ0S0yZwBWkWtqjSXk7UjV68d\neihkj7V6AY5LBDSFyW0k1u3GPvNHz29nqDVuFW/RG0buTmc1qsv7+/KuvoXKUE7F\n6ZlAVGLzAL9+9O7LgiXrAY0Lm8IuqW7RjBNuDXECgYA6StwLHTn+sWdfANmAipxv\niXOkvB9dI+yvr6kJAMpkoYij2x+C4hvkzPfp/Zis+igy9Y9i2VchyyDUqUGFgERM\ntGmhW6EAqNjyR5XufFJcC1PvQIBiN2pgvNHpSWvX4DhjsiEgqEanZDZCH7cPw0my\nuM5FrLs0DkPp0yOv9yujQQKBgQCmXxwIfZlMno1oiYtiaNRs2qna2RLG9vfBKKwU\npmSCldIdtYzsEQJgdM4ZfVJ44k8yWuv4uG2zQbpA769McRW7HiWMe/KkYojSsGuL\nbySs9fUm00E2GXTZ4uTv16juvjAMObczDogvo4aOl1elLd0UONZbp8DqjapoQvR/\nk5yZMQKBgQCwd273yx8PxxSB8w4Jy7W3ACfGsC9OVny33TimB12zQdd3X39Pfo1C\nyiGBKm4dtT4pUkMpsTZ5IxGFYoQ20Lech/gv3OJ9D/Yo46yQqgXeSpNWprlydtrB\nqr7UMBgZCqaW/YpmtuO5eyFXeguHsXmfXywmxks1cpqi+SBrxBDxQg==\n-----END RSA PRIVATE KEY-----\n",
            "public_key_fingerprint_md5": "15:f8:a0:3c:50:04:5b:e8:73:71:a0:93:a3:2d:74:b4",
            "public_key_openssh": "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDGBsc7tCqNzyUn28As63DWL/Tsjp4uC7xFyoftR3EWFM/l6XL5/5QsEjsb5kHnLHqum2qe5HWGLczZy/KM9DJGo1Kio45x5UmkhQbWjjlUIP/5kqRbZtVZJ0+pUVeVovaiw5kINk60KdSOyy9TsUU8qXwKNDmVzMy8RQgptqwHKKyMbD5yxZqQr7PYpce8jwhpYptfTEE17rg0lnNWLsb9MImnY9pMnFNujMg8ojOvtFIUizMSl9PPzF/StAJlF6dCloHVT2zch8k7ypsk9Pi58PjO8FLP3TyNIAZGsxbSc5fKb3PbAGUQdZNWH5nIkJNsmOj2M2a5Mv7u4EEcO415\n",
            "public_key_pem": "-----BEGIN PUBLIC KEY-----\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAxgbHO7Qqjc8lJ9vALOtw\n1i/07I6eLgu8RcqH7UdxFhTP5ely+f+ULBI7G+ZB5yx6rptqnuR1hi3M2cvyjPQy\nRqNSoqOOceVJpIUG1o45VCD/+ZKkW2bVWSdPqVFXlaL2osOZCDZOtCnUjssvU7FF\nPKl8CjQ5lczMvEUIKbasByisjGw+csWakK+z2KXHvI8IaWKbX0xBNe64NJZzVi7G\n/TCJp2PaTJxTbozIPKIzr7RSFIszEpfTz8xf0rQCZRenQpaB1U9s3IfJO8qbJPT4\nufD4zvBSz908jSAGRrMW0nOXym9z2wBlEHWTVh+ZyJCTbJjo9jNmuTL+7uBBHDuN\neQIDAQAB\n-----END PUBLIC KEY-----\n",
            "rsa_bits": 2048
          },
          "sensitive_attributes": [],
          "private": "bnVsbA=="
        }
      ]
    },
    {
      "module": "module.vault.module.cluster",
      "mode": "managed",
      "type": "tls_self_signed_cert",
      "name": "root",
      "provider": "provider[\"registry.terraform.io/hashicorp/tls\"]",
      "instances": [
        {
          "index_key": 0,
          "schema_version": 0,
          "attributes": {
            "allowed_uses": [
              "cert_signing"
            ],
            "cert_pem": "-----BEGIN CERTIFICATE-----\nMIIEVjCCAz6gAwIBAgIQalUmXQP+OFfRcN3H5NcF/DANBgkqhkiG9w0BAQsFADCB\nxDELMAkGA1UEBhMCVVMxCzAJBgNVBAgTAkNBMRUwEwYDVQQHEwxUaGUgSW50cmFu\nZXQxGzAZBgNVBAkTEjEyMyBFeGFtcGxlIFN0cmVldDETMBEGA1UEERMKOTU1NTkt\nMTIyNzEVMBMGA1UEChMMRXhhbXBsZSwgSW5jMSwwKgYDVQQLEyNEZXBhcnRtZW50\nIG9mIENlcnRpZmljYXRlIEF1dGhvcml0eTEaMBgGA1UEAxMRRXhhbXBsZSBJbmMu\nIFJvb3QwHhcNMjIwMzE3MTQyMDQ1WhcNMjUwMzE2MTQyMDQ1WjCBxDELMAkGA1UE\nBhMCVVMxCzAJBgNVBAgTAkNBMRUwEwYDVQQHEwxUaGUgSW50cmFuZXQxGzAZBgNV\nBAkTEjEyMyBFeGFtcGxlIFN0cmVldDETMBEGA1UEERMKOTU1NTktMTIyNzEVMBMG\nA1UEChMMRXhhbXBsZSwgSW5jMSwwKgYDVQQLEyNEZXBhcnRtZW50IG9mIENlcnRp\nZmljYXRlIEF1dGhvcml0eTEaMBgGA1UEAxMRRXhhbXBsZSBJbmMuIFJvb3QwggEi\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCuQ8gd/RH3qZC5NMSFTP3R0yqX\ncpn9ToWVPJtMHsVjffKMjGlD1BpwcOJaICwQG8jw3hTxh7zKliuNTCM5mdY3/+Ub\ndSQDU3uX8S88bt764fURWwk2uzswQCQHCmxo5A5C+glzTntygV8g7hQLv5qU2io6\nbuNxlhCaF5UK6SBetGkCReuCt83KvRjqC3f3O11EnurviUH7GHqqj7cKFnF99YID\nhhI5ftLAEvLTCmxfu5S+lubXQyBCcehGq8ffG0UJxkPUJ4T/ChtJ47edipoRgU+K\nh3BrBrQydOK5YtrdWPhEJESdjSMyxUcP5usxJdcKKOYQvCl0hmdQkQPFW3itAgMB\nAAGjQjBAMA4GA1UdDwEB/wQEAwICBDAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQW\nBBTLuQCyF1Y4sRnEcisejWVZACarmDANBgkqhkiG9w0BAQsFAAOCAQEAPsHQDWd7\nycQ4T1epbEJAd/2d/Wg9yOipBKJsPIKFFij4A6Nz6ZFp/AL09M6Vt73ZG6+ytE2+\nJ66APePGr58I9Rkq6paK02Nzuq456hUHmgQjdLuJDWkAQ7kWsi0b9UwuK6QgAD1O\nBwQYq9SUke5BfdUa2T7ODCMouhJh2xbPo6DCCIDcErSX6FqGs2uRFbjK+ln5sFq7\nc3KpPD9C1qHOG0UNvCTwbb8KZtQADgqUuinNQFY+fX5KMQwu1ES0+GtEind/HL/O\nNomfSydxIKOmhpErXKqu3w/7syafaZL0NNf1A7NY/FDkGNV7V84cKpeQbYZeeTyR\n6pm6MC5T2OjeiA==\n-----END CERTIFICATE-----\n",
            "dns_names": null,
            "early_renewal_hours": 8760,
            "id": "141340290887196383726415879104175212028",
            "ip_addresses": null,
            "is_ca_certificate": true,
            "key_algorithm": "RSA",
            "private_key_pem": "c9fe84d47ceeafa431e3c1bb8796639f2dafb407",
            "ready_for_renewal": false,
            "set_subject_key_id": null,
            "subject": [
              {
                "common_name": "Example Inc. Root",
                "country": "US",
                "locality": "The Intranet",
                "organization": "Example, Inc",
                "organizational_unit": "Department of Certificate Authority",
                "postal_code": "95559-1227",
                "province": "CA",
                "serial_number": "",
                "street_address": [
                  "123 Example Street"
                ]
              }
            ],
            "uris": null,
            "validity_end_time": "2025-03-16T17:20:45.097013+03:00",
            "validity_period_hours": 26280,
            "validity_start_time": "2022-03-17T17:20:45.097013+03:00"
          },
          "sensitive_attributes": [
            [
              {
                "type": "get_attr",
                "value": "private_key_pem"
              }
            ]
          ],
          "private": "bnVsbA==",
          "dependencies": [
            "module.vault.module.cluster.tls_private_key.root"
          ]
        }
      ]
    }
  ]
}
